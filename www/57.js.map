{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","registerInstance","url","ionRouteDataChanged","createEvent","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","chainToPath","chain","route","segment","param","params","slice","push","writePath","history","root","useHash","direction","state","parsePath","pushState","replaceState","removePrefix","prefix","i","readPath","loc","pathname","hash","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","outlet","searchNavNode","componentOnReady","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","undefined","waitUntilNavNode","document","body","Promise","resolve","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","input","expected","routeRedirect","find","matchesIDs","len","Math","min","toLowerCase","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","a","b","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","score","routerPathToChain","matchedChain","computePriority","level","pow","shift","readRedirects","Array","children","el","tagName","readProp","readRoutes","flattenRouterTree","readRouteNodes","component","Error","componentProps","prop","hasAttribute","getAttribute","nodes","flattenNode","sub","Router","previousPath","busy","lastState","ionRouteWillChange","ionRouteDidChange","onRoutesChanged","debounce","onRedirectChanged","bind","historyDirection","getPath","writeNavStateRoot","ev","detail","register","back","startsWith","URL","location","href","setPath","waitPromise","warn","safeWriteNavState","win","title","redirectFrom","lock","unlock","p","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","getElement","RouterLink","routerDirection","onClick","openURL","mode","getIonMode","attrs","rel","target","h","Host","class","createColorClasses","color"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,IAAMA,KAAK;AACP,iBAAYC,OAAZ,EAAqB;AAAA;;AACjBC,+DAAgB,CAAC,IAAD,EAAOD,OAAP,CAAhB;AACA;AACR;AACA;AACA;AACA;AACA;;AACQ,SAAKE,GAAL,GAAW,EAAX;AACA,SAAKC,mBAAL,GAA2BC,2DAAW,CAAC,IAAD,EAAO,qBAAP,EAA8B,CAA9B,CAAtC;AACH;;AAXM;AAAA;AAAA,6BAYEC,QAZF,EAYY;AACf,WAAKF,mBAAL,CAAyBG,IAAzB,CAA8BD,QAA9B;AACH;AAdM;AAAA;AAAA,qCAeUA,QAfV,EAeoBE,QAfpB,EAe8B;AACjC,UAAIF,QAAQ,KAAKE,QAAjB,EAA2B;AACvB;AACH;;AACD,UAAMC,KAAK,GAAGH,QAAQ,GAAGI,MAAM,CAACC,IAAP,CAAYL,QAAZ,CAAH,GAA2B,EAAjD;AACA,UAAMM,KAAK,GAAGJ,QAAQ,GAAGE,MAAM,CAACC,IAAP,CAAYH,QAAZ,CAAH,GAA2B,EAAjD;;AACA,UAAIC,KAAK,CAACI,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;AAC/B,aAAKC,QAAL,CAAcR,QAAd;AACA;AACH;;AATgC,iKAUfG,KAVe;AAAA;;AAAA;AAUjC,4DAAyB;AAAA,cAAdM,GAAc;;AACrB,cAAIT,QAAQ,CAACS,GAAD,CAAR,KAAkBP,QAAQ,CAACO,GAAD,CAA9B,EAAqC;AACjC,iBAAKD,QAAL,CAAcR,QAAd;AACA;AACH;AACJ;AAfgC;AAAA;AAAA;AAAA;AAAA;AAgBpC;AA/BM;AAAA;AAAA,wCAgCa;AAChB,WAAKF,mBAAL,CAAyBG,IAAzB;AACH;AAlCM;AAAA;AAAA,wBAmCe;AAAE,aAAO;AAC3B,eAAO,CAAC,UAAD,CADoB;AAE3B,qBAAa,CAAC,UAAD,CAFc;AAG3B,0BAAkB,CAAC,kBAAD;AAHS,OAAP;AAIpB;AAvCG;;AAAA;AAAA,GAAX;;AA0CA,IAAMS,aAAa;AACf,yBAAYf,OAAZ,EAAqB;AAAA;;AACjBC,+DAAgB,CAAC,IAAD,EAAOD,OAAP,CAAhB;AACA,SAAKgB,uBAAL,GAA+BZ,2DAAW,CAAC,IAAD,EAAO,yBAAP,EAAkC,CAAlC,CAA1C;AACH;;AAJc;AAAA;AAAA,oCAKC;AACZ,WAAKY,uBAAL,CAA6BV,IAA7B;AACH;AAPc;AAAA;AAAA,wCAQK;AAChB,WAAKU,uBAAL,CAA6BV,IAA7B;AACH;AAVc;AAAA;AAAA,wBAWO;AAAE,aAAO;AAC3B,gBAAQ,CAAC,eAAD,CADmB;AAE3B,cAAM,CAAC,eAAD;AAFqB,OAAP;AAGpB;AAdW;;AAAA;AAAA,GAAnB;;AAiBA,IAAMW,kBAAkB,GAAG,MAA3B;AACA,IAAMC,qBAAqB,GAAG,SAA9B;AACA,IAAMC,kBAAkB,GAAG,MAA3B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAc;AAC/B,MAAMC,IAAI,GAAGD,QAAQ,CAChBE,MADQ,CACD,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACZ,MAAF,GAAW,CAAf;AAAA,GADA,EAERa,IAFQ,CAEH,GAFG,CAAb;AAGA,SAAO,MAAMH,IAAb;AACH,CALD;;AAMA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3B,MAAML,IAAI,GAAG,EAAb;;AAD2B,8JAEPK,KAFO;AAAA;;AAAA;AAE3B,2DAA2B;AAAA,UAAhBC,KAAgB;;AAAA,kKACDA,KAAK,CAACN,IADL;AAAA;;AAAA;AACvB,+DAAkC;AAAA,cAAvBO,OAAuB;;AAC9B,cAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EAAwB;AACpB,gBAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,IAAgBH,KAAK,CAACG,MAAN,CAAaF,OAAO,CAACG,KAAR,CAAc,CAAd,CAAb,CAA9B;;AACA,gBAAI,CAACF,KAAL,EAAY;AACR,qBAAO,IAAP;AACH;;AACDR,gBAAI,CAACW,IAAL,CAAUH,KAAV;AACH,WAND,MAOK,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACrBP,gBAAI,CAACW,IAAL,CAAUJ,OAAV;AACH;AACJ;AAZsB;AAAA;AAAA;AAAA;AAAA;AAa1B;AAf0B;AAAA;AAAA;AAAA;AAAA;;AAgB3B,SAAOP,IAAP;AACH,CAjBD;;AAkBA,IAAMY,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,EAAyBf,IAAzB,EAA+BgB,SAA/B,EAA0CC,KAA1C,EAAoD;AAClE,MAAIrC,GAAG,GAAGkB,YAAY,8IACfoB,SAAS,CAACJ,IAAD,CADM,sIAEfd,IAFe,GAAtB;;AAIA,MAAIe,OAAJ,EAAa;AACTnC,OAAG,GAAG,MAAMA,GAAZ;AACH;;AACD,MAAIoC,SAAS,KAAKpB,qBAAlB,EAAyC;AACrCiB,WAAO,CAACM,SAAR,CAAkBF,KAAlB,EAAyB,EAAzB,EAA6BrC,GAA7B;AACH,GAFD,MAGK;AACDiC,WAAO,CAACO,YAAR,CAAqBH,KAArB,EAA4B,EAA5B,EAAgCrC,GAAhC;AACH;AACJ,CAdD;;AAeA,IAAMyC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAStB,IAAT,EAAkB;AACnC,MAAIsB,MAAM,CAAChC,MAAP,GAAgBU,IAAI,CAACV,MAAzB,EAAiC;AAC7B,WAAO,IAAP;AACH;;AACD,MAAIgC,MAAM,CAAChC,MAAP,IAAiB,CAAjB,IAAsBgC,MAAM,CAAC,CAAD,CAAN,KAAc,EAAxC,EAA4C;AACxC,WAAOtB,IAAP;AACH;;AACD,OAAK,IAAIuB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAAChC,MAA3B,EAAmCiC,CAAC,EAApC,EAAwC;AACpC,QAAID,MAAM,CAACC,CAAD,CAAN,CAAUjC,MAAV,GAAmB,CAAnB,IAAwBgC,MAAM,CAACC,CAAD,CAAN,KAAcvB,IAAI,CAACuB,CAAD,CAA9C,EAAmD;AAC/C,aAAO,IAAP;AACH;AACJ;;AACD,MAAIvB,IAAI,CAACV,MAAL,KAAgBgC,MAAM,CAAChC,MAA3B,EAAmC;AAC/B,WAAO,CAAC,EAAD,CAAP;AACH;;AACD,SAAOU,IAAI,CAACU,KAAL,CAAWY,MAAM,CAAChC,MAAlB,CAAP;AACH,CAhBD;;AAiBA,IAAMkC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAMX,IAAN,EAAYC,OAAZ,EAAwB;AACrC,MAAIW,QAAQ,GAAGD,GAAG,CAACC,QAAnB;;AACA,MAAIX,OAAJ,EAAa;AACT,QAAMY,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAD,YAAQ,GAAIC,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAb,GACLA,IAAI,CAACjB,KAAL,CAAW,CAAX,CADK,GAEL,EAFN;AAGH;;AACD,MAAMY,MAAM,GAAGJ,SAAS,CAACJ,IAAD,CAAxB;AACA,MAAMd,IAAI,GAAGkB,SAAS,CAACQ,QAAD,CAAtB;AACA,SAAOL,YAAY,CAACC,MAAD,EAAStB,IAAT,CAAnB;AACH,CAXD;;AAYA,IAAMkB,SAAS,GAAG,SAAZA,SAAY,CAAClB,IAAD,EAAU;AACxB,MAAIA,IAAI,IAAI,IAAZ,EAAkB;AACd,WAAO,CAAC,EAAD,CAAP;AACH;;AACD,MAAMD,QAAQ,GAAGC,IAAI,CAAC4B,KAAL,CAAW,GAAX,EACZC,GADY,CACR,UAAA3B,CAAC;AAAA,WAAIA,CAAC,CAAC4B,IAAF,EAAJ;AAAA,GADO,EAEZ7B,MAFY,CAEL,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACZ,MAAF,GAAW,CAAf;AAAA,GAFI,CAAjB;;AAGA,MAAIS,QAAQ,CAACT,MAAT,KAAoB,CAAxB,EAA2B;AACvB,WAAO,CAAC,EAAD,CAAP;AACH,GAFD,MAGK;AACD,WAAOS,QAAP;AACH;AACJ,CAbD;;AAeA,IAAMgC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAC5BC,SAAO,CAACC,KAAR,6BAAmCF,MAAM,CAAC1C,MAA1C;;AAD4B,8JAER0C,MAFQ;AAAA;;AAAA;AAAA;AAAA,UAEjB3B,KAFiB;AAGxB,UAAML,IAAI,GAAG,EAAb;AACAK,WAAK,CAAC8B,OAAN,CAAc,UAAAC,CAAC;AAAA,eAAIpC,IAAI,CAACW,IAAL,OAAAX,IAAI,qIAASoC,CAAC,CAACpC,IAAX,EAAR;AAAA,OAAf;AACA,UAAMqC,GAAG,GAAGhC,KAAK,CAACwB,GAAN,CAAU,UAAAO,CAAC;AAAA,eAAIA,CAAC,CAACE,EAAN;AAAA,OAAX,CAAZ;AACAL,aAAO,CAACM,KAAR,cAAoBzC,YAAY,CAACE,IAAD,CAAhC,GAA0C,uCAA1C,EAAmF,MAAnF,aAA+FqC,GAAG,CAAClC,IAAJ,CAAS,IAAT,CAA/F;AANwB;;AAE5B,2DAA4B;AAAA;AAK3B;AAP2B;AAAA;AAAA;AAAA;AAAA;;AAQ5B8B,SAAO,CAACO,QAAR;AACH,CATD;;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAe;AAClCT,SAAO,CAACC,KAAR,gCAAsCQ,SAAS,CAACpD,MAAhD;;AADkC,8JAEXoD,SAFW;AAAA;;AAAA;AAElC,2DAAkC;AAAA,UAAvBC,QAAuB;;AAC9B,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbX,eAAO,CAACM,KAAR,CAAc,QAAd,eAA8BzC,YAAY,CAAC6C,QAAQ,CAACE,IAAV,CAA1C,GAA6D,mBAA7D,EAAkF,OAAlF,eAAiG/C,YAAY,CAAC6C,QAAQ,CAACC,EAAV,CAA7G,GAA8H,mBAA9H;AACH;AACJ;AANiC;AAAA;AAAA;AAAA;AAAA;;AAOlCX,SAAO,CAACO,QAAR;AACH,CARD;;AAUA,IAAMM,cAAa;AAAA,0QAAG,iBAAOhC,IAAP,EAAaT,KAAb,EAAoBW,SAApB,EAA+B+B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsCC,mBAAtC,2DAAgD,KAAhD;AAAA;AAEd;AACMC,kBAHQ,GAGCC,aAAa,CAACpC,IAAD,CAHd,EAId;;AAJc,kBAKViC,KAAK,IAAI1C,KAAK,CAACf,MAAf,IAAyB,CAAC2D,MALhB;AAAA;AAAA;AAAA;;AAAA,6CAMHD,OANG;;AAAA;AAAA;AAAA,mBAQRC,MAAM,CAACE,gBAAP,EARQ;;AAAA;AASR7C,iBATQ,GASAD,KAAK,CAAC0C,KAAD,CATL;AAAA;AAAA,mBAUOE,MAAM,CAACG,UAAP,CAAkB9C,KAAK,CAACgC,EAAxB,EAA4BhC,KAAK,CAACG,MAAlC,EAA0CO,SAA1C,CAVP;;AAAA;AAURqC,kBAVQ;;AAWd;AACA;AACA,gBAAIA,MAAM,CAACL,OAAX,EAAoB;AAChBhC,uBAAS,GAAGrB,kBAAZ;AACAqD,qBAAO,GAAG,IAAV;AACH,aAhBa,CAiBd;;;AAjBc;AAAA,mBAkBEF,cAAa,CAACO,MAAM,CAACC,OAAR,EAAiBjD,KAAjB,EAAwBW,SAAxB,EAAmC+B,KAAK,GAAG,CAA3C,EAA8CC,OAA9C,CAlBf;;AAAA;AAkBdA,mBAlBc;;AAAA,iBAqBVK,MAAM,CAACE,WArBG;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAsBJF,MAAM,CAACE,WAAP,EAtBI;;AAAA;AAAA,6CAwBPP,OAxBO;;AAAA;AAAA;AAAA;AA2Bdf,mBAAO,CAACuB,KAAR;AA3Bc,6CA4BP,KA5BO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbV,aAAa;AAAA;AAAA;AAAA,GAAnB;;AA+BA,IAAMW,YAAY;AAAA,2QAAG,kBAAO3C,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXuB,eADW,GACL,EADK;AAGbqB,gBAHa,GAGN5C,IAHM,EAIjB;;AAJiB;AAAA;;AAMbmC,kBAAM,GAAGC,aAAa,CAACQ,IAAD,CAAtB;;AANa,iBAOTT,MAPS;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAQQA,MAAM,CAACU,UAAP,EARR;;AAAA;AAQHrB,cARG;;AAAA,iBASLA,EATK;AAAA;AAAA;AAAA;;AAULoB,gBAAI,GAAGpB,EAAE,CAACgB,OAAV;AACAhB,cAAE,CAACgB,OAAH,GAAaM,SAAb;AACAvB,eAAG,CAAC1B,IAAJ,CAAS2B,EAAT;AAZK;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,8CAsBV;AAAED,iBAAG,EAAHA,GAAF;AAAOY,oBAAM,EAANA;AAAP,aAtBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZQ,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAwBA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,MAAIX,aAAa,CAACY,QAAQ,CAACC,IAAV,CAAjB,EAAkC;AAC9B,WAAOC,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,SAAO,IAAID,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1BC,UAAM,CAACC,gBAAP,CAAwB,gBAAxB,EAA0CF,OAA1C,EAAmD;AAAEG,UAAI,EAAE;AAAR,KAAnD;AACH,GAFM,CAAP;AAGH,CAPD;;AAQA,IAAMC,KAAK,GAAG,4FAAd;;AACA,IAAMnB,aAAa,GAAG,SAAhBA,aAAgB,CAACpC,IAAD,EAAU;AAC5B,MAAI,CAACA,IAAL,EAAW;AACP,WAAO8C,SAAP;AACH;;AACD,MAAI9C,IAAI,CAACwD,OAAL,CAAaD,KAAb,CAAJ,EAAyB;AACrB,WAAOvD,IAAP;AACH;;AACD,MAAMmC,MAAM,GAAGnC,IAAI,CAACyD,aAAL,CAAmBF,KAAnB,CAAf;AACA,SAAOpB,MAAM,GAAGA,MAAH,GAAYW,SAAzB;AACH,CATD;;AAWA,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQnE,KAAR,EAAkB;AAAA,MAC9BuC,IAD8B,GACjBvC,KADiB,CAC9BuC,IAD8B;AAAA,MACxBD,EADwB,GACjBtC,KADiB,CACxBsC,EADwB;;AAEtC,MAAIA,EAAE,KAAKgB,SAAX,EAAsB;AAClB,WAAO,KAAP;AACH;;AACD,MAAIf,IAAI,CAACvD,MAAL,GAAcmF,KAAK,CAACnF,MAAxB,EAAgC;AAC5B,WAAO,KAAP;AACH;;AACD,OAAK,IAAIiC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsB,IAAI,CAACvD,MAAzB,EAAiCiC,CAAC,EAAlC,EAAsC;AAClC,QAAMmD,QAAQ,GAAG7B,IAAI,CAACtB,CAAD,CAArB;;AACA,QAAImD,QAAQ,KAAK,GAAjB,EAAsB;AAClB,aAAO,IAAP;AACH;;AACD,QAAIA,QAAQ,KAAKD,KAAK,CAAClD,CAAD,CAAtB,EAA2B;AACvB,aAAO,KAAP;AACH;AACJ;;AACD,SAAOsB,IAAI,CAACvD,MAAL,KAAgBmF,KAAK,CAACnF,MAA7B;AACH,CAlBD;;AAmBA,IAAMqF,aAAa,GAAG,SAAhBA,aAAgB,CAAC3E,IAAD,EAAOgC,MAAP,EAAkB;AACpC,SAAOA,MAAM,CAAC4C,IAAP,CAAY,UAAAtE,KAAK;AAAA,WAAIkE,eAAe,CAACxE,IAAD,EAAOM,KAAP,CAAnB;AAAA,GAAjB,CAAP;AACH,CAFD;;AAGA,IAAMuE,UAAU,GAAG,SAAbA,UAAa,CAACxC,GAAD,EAAMhC,KAAN,EAAgB;AAC/B,MAAMyE,GAAG,GAAGC,IAAI,CAACC,GAAL,CAAS3C,GAAG,CAAC/C,MAAb,EAAqBe,KAAK,CAACf,MAA3B,CAAZ;AACA,MAAIiC,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGuD,GAAX,EAAgBvD,CAAC,EAAjB,EAAqB;AACjB,QAAIc,GAAG,CAACd,CAAD,CAAH,CAAO0D,WAAP,OAAyB5E,KAAK,CAACkB,CAAD,CAAL,CAASe,EAAtC,EAA0C;AACtC;AACH;AACJ;;AACD,SAAOf,CAAP;AACH,CATD;;AAUA,IAAM2D,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAY9E,KAAZ,EAAsB;AACtC,MAAMN,QAAQ,GAAG,IAAIqF,cAAJ,CAAmBD,SAAnB,CAAjB;AACA,MAAIE,cAAc,GAAG,KAArB;AACA,MAAIC,SAAJ;;AACA,OAAK,IAAI/D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,KAAK,CAACf,MAA1B,EAAkCiC,CAAC,EAAnC,EAAuC;AACnC,QAAMvB,IAAI,GAAGK,KAAK,CAACkB,CAAD,CAAL,CAASvB,IAAtB;;AACA,QAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,EAAhB,EAAoB;AAChBqF,oBAAc,GAAG,IAAjB;AACH,KAFD,MAGK;AAAA,kKACqBrF,IADrB;AAAA;;AAAA;AACD,+DAA4B;AAAA,cAAjBO,OAAiB;AACxB,cAAMgF,IAAI,GAAGxF,QAAQ,CAACyF,IAAT,EAAb,CADwB,CAExB;;AACA,cAAIjF,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EAAwB;AACpB,gBAAIgF,IAAI,KAAK,EAAb,EAAiB;AACb,qBAAO,IAAP;AACH;;AACDD,qBAAS,GAAGA,SAAS,IAAI,EAAzB;AACA,gBAAM7E,MAAM,GAAG6E,SAAS,CAAC/D,CAAD,CAAT,KAAiB+D,SAAS,CAAC/D,CAAD,CAAT,GAAe,EAAhC,CAAf;AACAd,kBAAM,CAACF,OAAO,CAACG,KAAR,CAAc,CAAd,CAAD,CAAN,GAA2B6E,IAA3B;AACH,WAPD,MAQK,IAAIA,IAAI,KAAKhF,OAAb,EAAsB;AACvB,mBAAO,IAAP;AACH;AACJ;AAfA;AAAA;AAAA;AAAA;AAAA;;AAgBD8E,oBAAc,GAAG,KAAjB;AACH;AACJ;;AACD,MAAMf,OAAO,GAAIe,cAAD,GACVA,cAAc,MAAMtF,QAAQ,CAACyF,IAAT,OAAoB,EAA1B,CADJ,GAEV,IAFN;;AAGA,MAAI,CAAClB,OAAL,EAAc;AACV,WAAO,IAAP;AACH;;AACD,MAAIgB,SAAJ,EAAe;AACX,WAAOjF,KAAK,CAACwB,GAAN,CAAU,UAACvB,KAAD,EAAQiB,CAAR;AAAA,aAAe;AAC5Be,UAAE,EAAEhC,KAAK,CAACgC,EADkB;AAE5BtC,YAAI,EAAEM,KAAK,CAACN,IAFgB;AAG5BS,cAAM,EAAEgF,WAAW,CAACnF,KAAK,CAACG,MAAP,EAAe6E,SAAS,CAAC/D,CAAD,CAAxB;AAHS,OAAf;AAAA,KAAV,CAAP;AAKH;;AACD,SAAOlB,KAAP;AACH,CA1CD;;AA2CA,IAAMoF,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAIC,CAAJ,EAAU;AAC1B,MAAI,CAACD,CAAD,IAAMC,CAAV,EAAa;AACT,WAAOA,CAAP;AACH,GAFD,MAGK,IAAID,CAAC,IAAI,CAACC,CAAV,EAAa;AACd,WAAOD,CAAP;AACH,GAFI,MAGA,IAAIA,CAAC,IAAIC,CAAT,EAAY;AACb,WAAOxG,MAAM,CAACyG,MAAP,CAAczG,MAAM,CAACyG,MAAP,CAAc,EAAd,EAAkBF,CAAlB,CAAd,EAAoCC,CAApC,CAAP;AACH;;AACD,SAAO/B,SAAP;AACH,CAXD;;AAYA,IAAMiC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACxD,GAAD,EAAMyD,MAAN,EAAiB;AACtC,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAMC,QAAQ,GAAG5D,GAAG,CAACR,GAAJ,CAAQ,UAAAN,CAAC;AAAA,WAAIA,CAAC,CAACe,EAAN;AAAA,GAAT,CAAjB;;AAHsC,8JAIlBwD,MAJkB;AAAA;;AAAA;AAItC,2DAA4B;AAAA,UAAjBzF,KAAiB;AACxB,UAAM6F,KAAK,GAAGrB,UAAU,CAACoB,QAAD,EAAW5F,KAAX,CAAxB;;AACA,UAAI6F,KAAK,GAAGF,UAAZ,EAAwB;AACpBD,aAAK,GAAG1F,KAAR;AACA2F,kBAAU,GAAGE,KAAb;AACH;AACJ;AAVqC;AAAA;AAAA;AAAA;AAAA;;AAWtC,MAAIH,KAAJ,EAAW;AACP,WAAOA,KAAK,CAAClE,GAAN,CAAU,UAACvB,KAAD,EAAQiB,CAAR;AAAA,aAAe;AAC5Be,UAAE,EAAEhC,KAAK,CAACgC,EADkB;AAE5BtC,YAAI,EAAEM,KAAK,CAACN,IAFgB;AAG5BS,cAAM,EAAEgF,WAAW,CAACnF,KAAK,CAACG,MAAP,EAAe4B,GAAG,CAACd,CAAD,CAAH,IAAUc,GAAG,CAACd,CAAD,CAAH,CAAOd,MAAhC;AAHS,OAAf;AAAA,KAAV,CAAP;AAKH;;AACD,SAAO,IAAP;AACH,CAnBD;;AAoBA,IAAM0F,iBAAiB,GAAG,SAApBA,iBAAoB,CAACnG,IAAD,EAAO8F,MAAP,EAAkB;AACxC,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAIzB,OAAO,GAAG,CAAd;;AAFwC,8JAGpBwB,MAHoB;AAAA;;AAAA;AAGxC,2DAA4B;AAAA,UAAjBzF,KAAiB;AACxB,UAAM+F,YAAY,GAAGlB,WAAW,CAAClF,IAAD,EAAOK,KAAP,CAAhC;;AACA,UAAI+F,YAAY,KAAK,IAArB,EAA2B;AACvB,YAAMF,KAAK,GAAGG,eAAe,CAACD,YAAD,CAA7B;;AACA,YAAIF,KAAK,GAAG5B,OAAZ,EAAqB;AACjBA,iBAAO,GAAG4B,KAAV;AACAH,eAAK,GAAGK,YAAR;AACH;AACJ;AACJ;AAZuC;AAAA;AAAA;AAAA;AAAA;;AAaxC,SAAOL,KAAP;AACH,CAdD;;AAeA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAAChG,KAAD,EAAW;AAC/B,MAAI6F,KAAK,GAAG,CAAZ;AACA,MAAII,KAAK,GAAG,CAAZ;;AAF+B,8JAGXjG,KAHW;AAAA;;AAAA;AAG/B,2DAA2B;AAAA,UAAhBC,KAAgB;;AAAA,mKACJA,KAAK,CAACN,IADF;AAAA;;AAAA;AACvB,kEAA+B;AAAA,cAApBA,IAAoB;;AAC3B,cAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACjBkG,iBAAK,IAAInB,IAAI,CAACwB,GAAL,CAAS,CAAT,EAAYD,KAAZ,CAAT;AACH,WAFD,MAGK,IAAItG,IAAI,KAAK,EAAb,EAAiB;AAClBkG,iBAAK,IAAInB,IAAI,CAACwB,GAAL,CAAS,CAAT,EAAYD,KAAZ,CAAT;AACH;;AACDA,eAAK;AACR;AATsB;AAAA;AAAA;AAAA;AAAA;AAU1B;AAb8B;AAAA;AAAA;AAAA;AAAA;;AAc/B,SAAOJ,KAAP;AACH,CAfD;;IAgBMd,c;AACF,0BAAYpF,IAAZ,EAAkB;AAAA;;AACd,SAAKA,IAAL,GAAYA,IAAI,CAACU,KAAL,EAAZ;AACH;;;;2BACM;AACH,UAAI,KAAKV,IAAL,CAAUV,MAAV,GAAmB,CAAvB,EAA0B;AACtB,eAAO,KAAKU,IAAL,CAAUwG,KAAV,EAAP;AACH;;AACD,aAAO,EAAP;AACH;;;;;;AAGL,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAC3F,IAAD,EAAU;AAC5B,SAAO4F,KAAK,CAAC7D,IAAN,CAAW/B,IAAI,CAAC6F,QAAhB,EACF1G,MADE,CACK,UAAA2G,EAAE;AAAA,WAAIA,EAAE,CAACC,OAAH,KAAe,oBAAnB;AAAA,GADP,EAEFhF,GAFE,CAEE,UAAA+E,EAAE,EAAI;AACX,QAAMhE,EAAE,GAAGkE,QAAQ,CAACF,EAAD,EAAK,IAAL,CAAnB;AACA,WAAO;AACH/D,UAAI,EAAE3B,SAAS,CAAC4F,QAAQ,CAACF,EAAD,EAAK,MAAL,CAAT,CADZ;AAEHhE,QAAE,EAAEA,EAAE,IAAI,IAAN,GAAagB,SAAb,GAAyB1C,SAAS,CAAC0B,EAAD;AAFnC,KAAP;AAIH,GARM,CAAP;AASH,CAVD;;AAWA,IAAMmE,UAAU,GAAG,SAAbA,UAAa,CAACjG,IAAD,EAAU;AACzB,SAAOkG,iBAAiB,CAACC,cAAc,CAACnG,IAAD,CAAf,CAAxB;AACH,CAFD;;AAGA,IAAMmG,cAAc,GAAG,SAAjBA,cAAiB,CAACnG,IAAD,EAAuB;AAAA,MAAhB4C,IAAgB,uEAAT5C,IAAS;AAC1C,SAAO4F,KAAK,CAAC7D,IAAN,CAAWa,IAAI,CAACiD,QAAhB,EACF1G,MADE,CACK,UAAA2G,EAAE;AAAA,WAAIA,EAAE,CAACC,OAAH,KAAe,WAAf,IAA8BD,EAAE,CAACM,SAArC;AAAA,GADP,EAEFrF,GAFE,CAEE,UAAA+E,EAAE,EAAI;AACX,QAAMM,SAAS,GAAGJ,QAAQ,CAACF,EAAD,EAAK,WAAL,CAA1B;;AACA,QAAIM,SAAS,IAAI,IAAjB,EAAuB;AACnB,YAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACH;;AACD,WAAO;AACHnH,UAAI,EAAEkB,SAAS,CAAC4F,QAAQ,CAACF,EAAD,EAAK,KAAL,CAAT,CADZ;AAEHtE,QAAE,EAAE4E,SAAS,CAACjC,WAAV,EAFD;AAGHxE,YAAM,EAAEmG,EAAE,CAACQ,cAHR;AAIHT,cAAQ,EAAEM,cAAc,CAACnG,IAAD,EAAO8F,EAAP;AAJrB,KAAP;AAMH,GAbM,CAAP;AAcH,CAfD;;AAgBA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACF,EAAD,EAAKS,IAAL,EAAc;AAC3B,MAAIA,IAAI,IAAIT,EAAZ,EAAgB;AACZ,WAAOA,EAAE,CAACS,IAAD,CAAT;AACH;;AACD,MAAIT,EAAE,CAACU,YAAH,CAAgBD,IAAhB,CAAJ,EAA2B;AACvB,WAAOT,EAAE,CAACW,YAAH,CAAgBF,IAAhB,CAAP;AACH;;AACD,SAAO,IAAP;AACH,CARD;;AASA,IAAML,iBAAiB,GAAG,SAApBA,iBAAoB,CAACQ,KAAD,EAAW;AACjC,MAAMxF,MAAM,GAAG,EAAf;;AADiC,+JAEdwF,KAFc;AAAA;;AAAA;AAEjC,8DAA0B;AAAA,UAAf9D,IAAe;AACtB+D,iBAAW,CAAC,EAAD,EAAKzF,MAAL,EAAa0B,IAAb,CAAX;AACH;AAJgC;AAAA;AAAA;AAAA;AAAA;;AAKjC,SAAO1B,MAAP;AACH,CAND;;AAOA,IAAMyF,WAAW,GAAG,SAAdA,WAAc,CAACpH,KAAD,EAAQ2B,MAAR,EAAgB0B,IAAhB,EAAyB;AACzC,MAAMxD,CAAC,GAAGG,KAAK,CAACK,KAAN,EAAV;AACAR,GAAC,CAACS,IAAF,CAAO;AACH2B,MAAE,EAAEoB,IAAI,CAACpB,EADN;AAEHtC,QAAI,EAAE0D,IAAI,CAAC1D,IAFR;AAGHS,UAAM,EAAEiD,IAAI,CAACjD;AAHV,GAAP;;AAKA,MAAIiD,IAAI,CAACiD,QAAL,CAAcrH,MAAd,KAAyB,CAA7B,EAAgC;AAC5B0C,UAAM,CAACrB,IAAP,CAAYT,CAAZ;AACA;AACH;;AAVwC,+JAWvBwD,IAAI,CAACiD,QAXkB;AAAA;;AAAA;AAWzC,8DAAiC;AAAA,UAAtBe,GAAsB;AAC7BD,iBAAW,CAACvH,CAAD,EAAI8B,MAAJ,EAAY0F,GAAZ,CAAX;AACH;AAbwC;AAAA;AAAA;AAAA;AAAA;AAc5C,CAdD;;AAgBA,IAAMC,MAAM;AACR,kBAAYjJ,OAAZ,EAAqB;AAAA;;AACjBC,+DAAgB,CAAC,IAAD,EAAOD,OAAP,CAAhB;AACA,SAAKkJ,YAAL,GAAoB,IAApB;AACA,SAAKC,IAAL,GAAY,KAAZ;AACA,SAAK5G,KAAL,GAAa,CAAb;AACA,SAAK6G,SAAL,GAAiB,CAAjB;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKhH,IAAL,GAAY,GAAZ;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKgH,kBAAL,GAA0BjJ,2DAAW,CAAC,IAAD,EAAO,oBAAP,EAA6B,CAA7B,CAArC;AACA,SAAKkJ,iBAAL,GAAyBlJ,2DAAW,CAAC,IAAD,EAAO,mBAAP,EAA4B,CAA5B,CAApC;AACH;;AA9BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCJmD,uBAAO,CAACM,KAAR,CAAc,+BAAd;AAhCI;AAAA,uBAiCEsB,gBAAgB,EAjClB;;AAAA;AAkCJ5B,uBAAO,CAACM,KAAR,CAAc,wBAAd;AAlCI;AAAA,uBAmCE,KAAK0F,eAAL,EAnCF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uCAqCW;AACf/D,YAAM,CAACC,gBAAP,CAAwB,yBAAxB,EAAmD+D,8DAAQ,CAAC,KAAKC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAD,EAAoC,EAApC,CAA3D;AACAlE,YAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+C+D,8DAAQ,CAAC,KAAKD,eAAL,CAAqBG,IAArB,CAA0B,IAA1B,CAAD,EAAkC,GAAlC,CAAvD;AACH;AAxCO;AAAA;AAAA,iCAyCK;AACT,UAAMpH,SAAS,GAAG,KAAKqH,gBAAL,EAAlB;AACA,UAAMrI,IAAI,GAAG,KAAKsI,OAAL,EAAb;AACArG,aAAO,CAACM,KAAR,CAAc,wCAAd,EAAwDvC,IAAxD,EAA8DgB,SAA9D;AACA,aAAO,KAAKuH,iBAAL,CAAuBvI,IAAvB,EAA6BgB,SAA7B,CAAP;AACH;AA9CO;AAAA;AAAA,iCA+CKwH,EA/CL,EA+CS;AAAA;;AACbA,QAAE,CAACC,MAAH,CAAUC,QAAV,CAAmB,CAAnB,EAAsB;AAAA,eAAM,KAAI,CAACC,IAAL,EAAN;AAAA,OAAtB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;AAvDY;AAAA;AAAA,yBAwDH/J,GAxDG,EAwDyB;AAAA,UAAvBoC,SAAuB,uEAAX,SAAW;;AAC7B,UAAIpC,GAAG,CAACgK,UAAJ,CAAe,GAAf,CAAJ,EAAyB;AACrBhK,WAAG,GAAI,IAAIiK,GAAJ,CAAQjK,GAAR,EAAasF,MAAM,CAAC4E,QAAP,CAAgBC,IAA7B,CAAD,CAAqCrH,QAA3C;AACH;;AACDO,aAAO,CAACM,KAAR,CAAc,yCAAd,EAAyD3D,GAAzD,EAA8DoC,SAA9D;AACA,UAAMhB,IAAI,GAAGkB,SAAS,CAACtC,GAAD,CAAtB;AACA,WAAKoK,OAAL,CAAahJ,IAAb,EAAmBgB,SAAnB;AACA,aAAO,KAAKuH,iBAAL,CAAuBvI,IAAvB,EAA6BgB,SAA7B,CAAP;AACH;AACD;AACJ;AACA;;AAnEY;AAAA;AAAA,2BAoED;AACHkD,YAAM,CAACrD,OAAP,CAAe8H,IAAf;AACA,aAAO3E,OAAO,CAACC,OAAR,CAAgB,KAAKgF,WAArB,CAAP;AACH;AACD;;AAxEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0EJhH,uBAAO,CAACM,KAAR,CAAc,cAAd,EAA8B,KAAK+F,OAAL,EAA9B;AACArG,uBAAO,CAACM,KAAR,CAAc,eAAd,EAA+B,KAAKqF,YAApC;AACA7F,2BAAW,CAACgF,UAAU,CAAC,KAAKH,EAAN,CAAX,CAAX;AACAnE,8BAAc,CAACgE,aAAa,CAAC,KAAKG,EAAN,CAAd,CAAd;;AA7EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+ER;;AA/EQ;AAAA;AAAA;AAAA,uSAgFS5F,SAhFT;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBAiFA,KAAK6G,IAjFL;AAAA;AAAA;AAAA;;AAkFA5F,uBAAO,CAACiH,IAAR,CAAa,uDAAb;AAlFA,kDAmFO,KAnFP;;AAAA;AAAA;AAAA,uBAqF0BzF,YAAY,CAACS,MAAM,CAACJ,QAAP,CAAgBC,IAAjB,CArFtC;;AAAA;AAAA;AAqFI1B,mBArFJ,uBAqFIA,GArFJ;AAqFSY,sBArFT,uBAqFSA,MArFT;AAsFEjB,sBAtFF,GAsFW+E,UAAU,CAAC,KAAKH,EAAN,CAtFrB;AAuFEvG,qBAvFF,GAuFUwF,gBAAgB,CAACxD,GAAD,EAAML,MAAN,CAvF1B;;AAAA,oBAwFC3B,KAxFD;AAAA;AAAA;AAAA;;AAyFA4B,uBAAO,CAACiH,IAAR,CAAa,mCAAb,EAAkD7G,GAAG,CAACR,GAAJ,CAAQ,UAAAN,CAAC;AAAA,yBAAIA,CAAC,CAACe,EAAN;AAAA,iBAAT,CAAlD;AAzFA,kDA0FO,KA1FP;;AAAA;AA4FEtC,oBA5FF,GA4FSI,WAAW,CAACC,KAAD,CA5FpB;;AAAA,oBA6FCL,IA7FD;AAAA;AAAA;AAAA;;AA8FAiC,uBAAO,CAACiH,IAAR,CAAa,iFAAb;AA9FA,kDA+FO,KA/FP;;AAAA;AAiGJjH,uBAAO,CAACM,KAAR,CAAc,wCAAd,EAAwDF,GAAxD,EAA6DrC,IAA7D;AACA,qBAAKgJ,OAAL,CAAahJ,IAAb,EAAmBgB,SAAnB;AAlGI;AAAA,uBAmGE,KAAKmI,iBAAL,CAAuBlG,MAAvB,EAA+B5C,KAA/B,EAAsCV,kBAAtC,EAA0DK,IAA1D,EAAgE,IAAhE,EAAsEqC,GAAG,CAAC/C,MAA1E,CAnGF;;AAAA;AAAA,kDAoGG,IApGH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wCAsGY;AAChB,UAAMU,IAAI,GAAG,KAAKsI,OAAL,EAAb;;AACA,UAAItI,IAAI,IAAI2E,aAAa,CAAC3E,IAAD,EAAOyG,aAAa,CAAC,KAAKG,EAAN,CAApB,CAAzB,EAAyD;AACrD,aAAK2B,iBAAL,CAAuBvI,IAAvB,EAA6BL,kBAA7B;AACH;AACJ;AA3GO;AAAA;AAAA,sCA4GU;AACd,aAAO,KAAK4I,iBAAL,CAAuB,KAAKD,OAAL,EAAvB,EAAuC3I,kBAAvC,CAAP;AACH;AA9GO;AAAA;AAAA,uCA+GW;AACf,UAAMyJ,GAAG,GAAGlF,MAAZ;;AACA,UAAIkF,GAAG,CAACvI,OAAJ,CAAYI,KAAZ,KAAsB,IAA1B,EAAgC;AAC5B,aAAKA,KAAL;AACAmI,WAAG,CAACvI,OAAJ,CAAYO,YAAZ,CAAyB,KAAKH,KAA9B,EAAqCmI,GAAG,CAACtF,QAAJ,CAAauF,KAAlD,EAAyDD,GAAG,CAACtF,QAAJ,CAAagF,QAAb,IAAyBM,GAAG,CAACtF,QAAJ,CAAagF,QAAb,CAAsBC,IAAxG;AACH;;AACD,UAAM9H,KAAK,GAAGmI,GAAG,CAACvI,OAAJ,CAAYI,KAA1B;AACA,UAAM6G,SAAS,GAAG,KAAKA,SAAvB;AACA,WAAKA,SAAL,GAAiB7G,KAAjB;;AACA,UAAIA,KAAK,GAAG6G,SAAZ,EAAuB;AACnB,eAAOlI,qBAAP;AACH,OAFD,MAGK,IAAIqB,KAAK,GAAG6G,SAAZ,EAAuB;AACxB,eAAOjI,kBAAP;AACH,OAFI,MAGA;AACD,eAAOF,kBAAP;AACH;AACJ;AAjIO;AAAA;AAAA;AAAA,8SAkIgBK,IAlIhB,EAkIsBgB,SAlItB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAmIChB,IAnID;AAAA;AAAA;AAAA;;AAoIAiC,uBAAO,CAACuB,KAAR,CAAc,iDAAd;AApIA,kDAqIO,KArIP;;AAAA;AAuIJ;AACMd,yBAxIF,GAwIc+D,aAAa,CAAC,KAAKG,EAAN,CAxI3B;AAyIEjE,wBAzIF,GAyIagC,aAAa,CAAC3E,IAAD,EAAO0C,SAAP,CAzI1B;AA0IA4G,4BA1IA,GA0Ie,IA1If;;AA2IJ,oBAAI3G,QAAJ,EAAc;AACV,uBAAKqG,OAAL,CAAarG,QAAQ,CAACC,EAAtB,EAA0B5B,SAA1B;AACAsI,8BAAY,GAAG3G,QAAQ,CAACE,IAAxB;AACA7C,sBAAI,GAAG2C,QAAQ,CAACC,EAAhB;AACH,iBA/IG,CAgJJ;;;AACMZ,sBAjJF,GAiJW+E,UAAU,CAAC,KAAKH,EAAN,CAjJrB;AAkJEvG,qBAlJF,GAkJU8F,iBAAiB,CAACnG,IAAD,EAAOgC,MAAP,CAlJ3B;;AAAA,oBAmJC3B,KAnJD;AAAA;AAAA;AAAA;;AAoJA4B,uBAAO,CAACuB,KAAR,CAAc,gDAAd;AApJA,kDAqJO,KArJP;;AAAA;AAAA,kDAwJG,KAAK2F,iBAAL,CAAuBrF,QAAQ,CAACC,IAAhC,EAAsC1D,KAAtC,EAA6CW,SAA7C,EAAwDhB,IAAxD,EAA8DsJ,YAA9D,CAxJH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8SA0JgB5F,IA1JhB,EA0JsBrD,KA1JtB,EA0J6BW,SA1J7B,EA0JwChB,IA1JxC,EA0J8CsJ,YA1J9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0J4DvG,qBA1J5D,8DA0JoE,CA1JpE;AAAA;AAAA,uBA2JiB,KAAKwG,IAAL,EA3JjB;;AAAA;AA2JEC,sBA3JF;AA4JAxG,uBA5JA,GA4JU,KA5JV;AAAA;AAAA;AAAA,uBA8JgB,KAAKF,aAAL,CAAmBY,IAAnB,EAAyBrD,KAAzB,EAAgCW,SAAhC,EAA2ChB,IAA3C,EAAiDsJ,YAAjD,EAA+DvG,KAA/D,CA9JhB;;AAAA;AA8JAC,uBA9JA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiKAf,uBAAO,CAACuB,KAAR;;AAjKA;AAmKJgG,sBAAM;AAnKF,kDAoKGxG,OApKH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuKEyG,iBAvKF,GAuKM,KAAKR,WAvKX;AAyKJ,qBAAKA,WAAL,GAAmB,IAAIjF,OAAJ,CAAY,UAAA5B,CAAC;AAAA,yBAAI6B,OAAO,GAAG7B,CAAd;AAAA,iBAAb,CAAnB;;AAzKI,sBA0KAqH,CAAC,KAAK7F,SA1KN;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA2KM6F,CA3KN;;AAAA;AAAA,kDA6KGxF,OA7KH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2SA+KYP,IA/KZ,EA+KkBrD,KA/KlB,EA+KyBW,SA/KzB,EA+KoChB,IA/KpC,EA+K0CsJ,YA/K1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+KwDvG,qBA/KxD,8DA+KgE,CA/KhE;;AAAA,qBAgLA,KAAK8E,IAhLL;AAAA;AAAA;AAAA;;AAiLA5F,uBAAO,CAACiH,IAAR,CAAa,uDAAb;AAjLA,kDAkLO,KAlLP;;AAAA;AAoLJ,qBAAKrB,IAAL,GAAY,IAAZ,CApLI,CAqLJ;;AACM6B,0BAtLF,GAsLe,KAAKC,gBAAL,CAAsB3J,IAAtB,EAA4BsJ,YAA5B,CAtLf;;AAuLJ,oBAAII,UAAJ,EAAgB;AACZ,uBAAK3B,kBAAL,CAAwB/I,IAAxB,CAA6B0K,UAA7B;AACH;;AAzLG;AAAA,uBA0LkB5G,cAAa,CAACY,IAAD,EAAOrD,KAAP,EAAcW,SAAd,EAAyB+B,KAAzB,CA1L/B;;AAAA;AA0LEC,uBA1LF;AA2LJ,qBAAK6E,IAAL,GAAY,KAAZ;;AACA,oBAAI7E,OAAJ,EAAa;AACTf,yBAAO,CAACM,KAAR,CAAc,4BAAd,EAA4CvC,IAA5C;AACH,iBA9LG,CA+LJ;;;AACA,oBAAI0J,UAAJ,EAAgB;AACZ,uBAAK1B,iBAAL,CAAuBhJ,IAAvB,CAA4B0K,UAA5B;AACH;;AAlMG,kDAmMG1G,OAnMH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAqMAhD,IArMA,EAqMMgB,SArMN,EAqMiB;AACrB,WAAKC,KAAL;AACAL,eAAS,CAACsD,MAAM,CAACrD,OAAR,EAAiB,KAAKC,IAAtB,EAA4B,KAAKC,OAAjC,EAA0Cf,IAA1C,EAAgDgB,SAAhD,EAA2D,KAAKC,KAAhE,CAAT;AACH;AAxMO;AAAA;AAAA,8BAyME;AACN,aAAOO,QAAQ,CAAC0C,MAAM,CAAC4E,QAAR,EAAkB,KAAKhI,IAAvB,EAA6B,KAAKC,OAAlC,CAAf;AACH;AA3MO;AAAA;AAAA,qCA4MSf,IA5MT,EA4Me4J,gBA5Mf,EA4MiC;AACrC,UAAM/G,IAAI,GAAG,KAAK+E,YAAlB;AACA,UAAMhF,EAAE,GAAG9C,YAAY,CAACE,IAAD,CAAvB;AACA,WAAK4H,YAAL,GAAoBhF,EAApB;;AACA,UAAIA,EAAE,KAAKC,IAAX,EAAiB;AACb,eAAO,IAAP;AACH;;AACD,UAAMgH,cAAc,GAAGD,gBAAgB,GAAG9J,YAAY,CAAC8J,gBAAD,CAAf,GAAoC,IAA3E;AACA,aAAO;AACH/G,YAAI,EAAJA,IADG;AAEHgH,sBAAc,EAAdA,cAFG;AAGHjH,UAAE,EAAFA;AAHG,OAAP;AAKH;AAzNO;AAAA;AAAA,wBA0NC;AAAE,aAAOkH,2DAAU,CAAC,IAAD,CAAjB;AAA0B;AA1N7B;;AAAA;AAAA,GAAZ;;AA6NA,IAAMC,UAAU;AACZ,sBAAYrL,OAAZ,EAAqB;AAAA;;AAAA;;AACjBC,+DAAgB,CAAC,IAAD,EAAOD,OAAP,CAAhB;AACA;AACR;AACA;AACA;;AACQ,SAAKsL,eAAL,GAAuB,SAAvB;;AACA,SAAKC,OAAL,GAAe,UAACzB,EAAD,EAAQ;AACnB0B,mEAAO,CAAC,MAAI,CAACnB,IAAN,EAAYP,EAAZ,EAAgB,MAAI,CAACwB,eAArB,CAAP;AACH,KAFD;AAGH;;AAXW;AAAA;AAAA,6BAYH;AAAA;;AACL,UAAMG,IAAI,GAAGC,2DAAU,CAAC,IAAD,CAAvB;AACA,UAAMC,KAAK,GAAG;AACVtB,YAAI,EAAE,KAAKA,IADD;AAEVuB,WAAG,EAAE,KAAKA,GAFA;AAGVC,cAAM,EAAE,KAAKA;AAHH,OAAd;AAKA,aAAQC,2DAAC,CAACC,mDAAD,EAAO;AAAER,eAAO,EAAE,KAAKA,OAAhB;AAAyBS,aAAK,EAAEvL,MAAM,CAACyG,MAAP,CAAczG,MAAM,CAACyG,MAAP,CAAc,EAAd,EAAkB+E,6DAAkB,CAAC,KAAKC,KAAN,CAApC,CAAd,wKAAoET,IAApE,EAA2E,IAA3E,mJAAiF,iBAAjF,EAAoG,IAApG;AAAhC,OAAP,EAAsJK,2DAAC,CAAC,GAAD,EAAMrL,MAAM,CAACyG,MAAP,CAAc,EAAd,EAAkByE,KAAlB,CAAN,EAAgCG,2DAAC,CAAC,MAAD,EAAS,IAAT,CAAjC,CAAvJ,CAAT;AACH;AApBW;AAAA;AAAA,wBAqBO;AAAE,aAAO,wYAAP;AAAkZ;AArB3Z;;AAAA;AAAA,GAAhB","file":"57.js","sourcesContent":["import { r as registerInstance, d as createEvent, e as getElement, c as getIonMode, h, H as Host } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { e as debounce } from './helpers-46f4a262.js';\nimport { o as openURL, c as createColorClasses } from './theme-18cbe2cc.js';\n\nconst Route = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Relative path that needs to match in order for this route to apply.\n         *\n         * Accepts paths similar to expressjs so that you can define parameters\n         * in the url /foo/:bar where bar would be available in incoming props.\n         */\n        this.url = '';\n        this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    }\n    onUpdate(newValue) {\n        this.ionRouteDataChanged.emit(newValue);\n    }\n    onComponentProps(newValue, oldValue) {\n        if (newValue === oldValue) {\n            return;\n        }\n        const keys1 = newValue ? Object.keys(newValue) : [];\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\n        if (keys1.length !== keys2.length) {\n            this.onUpdate(newValue);\n            return;\n        }\n        for (const key of keys1) {\n            if (newValue[key] !== oldValue[key]) {\n                this.onUpdate(newValue);\n                return;\n            }\n        }\n    }\n    connectedCallback() {\n        this.ionRouteDataChanged.emit();\n    }\n    static get watchers() { return {\n        \"url\": [\"onUpdate\"],\n        \"component\": [\"onUpdate\"],\n        \"componentProps\": [\"onComponentProps\"]\n    }; }\n};\n\nconst RouteRedirect = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n    }\n    propDidChange() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    connectedCallback() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    static get watchers() { return {\n        \"from\": [\"propDidChange\"],\n        \"to\": [\"propDidChange\"]\n    }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\r\nconst ROUTER_INTENT_FORWARD = 'forward';\r\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\r\n    const path = segments\r\n        .filter(s => s.length > 0)\r\n        .join('/');\r\n    return '/' + path;\r\n};\r\nconst chainToPath = (chain) => {\r\n    const path = [];\r\n    for (const route of chain) {\r\n        for (const segment of route.path) {\r\n            if (segment[0] === ':') {\r\n                const param = route.params && route.params[segment.slice(1)];\r\n                if (!param) {\r\n                    return null;\r\n                }\r\n                path.push(param);\r\n            }\r\n            else if (segment !== '') {\r\n                path.push(segment);\r\n            }\r\n        }\r\n    }\r\n    return path;\r\n};\r\nconst writePath = (history, root, useHash, path, direction, state) => {\r\n    let url = generatePath([\r\n        ...parsePath(root),\r\n        ...path\r\n    ]);\r\n    if (useHash) {\r\n        url = '#' + url;\r\n    }\r\n    if (direction === ROUTER_INTENT_FORWARD) {\r\n        history.pushState(state, '', url);\r\n    }\r\n    else {\r\n        history.replaceState(state, '', url);\r\n    }\r\n};\r\nconst removePrefix = (prefix, path) => {\r\n    if (prefix.length > path.length) {\r\n        return null;\r\n    }\r\n    if (prefix.length <= 1 && prefix[0] === '') {\r\n        return path;\r\n    }\r\n    for (let i = 0; i < prefix.length; i++) {\r\n        if (prefix[i].length > 0 && prefix[i] !== path[i]) {\r\n            return null;\r\n        }\r\n    }\r\n    if (path.length === prefix.length) {\r\n        return [''];\r\n    }\r\n    return path.slice(prefix.length);\r\n};\r\nconst readPath = (loc, root, useHash) => {\r\n    let pathname = loc.pathname;\r\n    if (useHash) {\r\n        const hash = loc.hash;\r\n        pathname = (hash[0] === '#')\r\n            ? hash.slice(1)\r\n            : '';\r\n    }\r\n    const prefix = parsePath(root);\r\n    const path = parsePath(pathname);\r\n    return removePrefix(prefix, path);\r\n};\r\nconst parsePath = (path) => {\r\n    if (path == null) {\r\n        return [''];\r\n    }\r\n    const segments = path.split('/')\r\n        .map(s => s.trim())\r\n        .filter(s => s.length > 0);\r\n    if (segments.length === 0) {\r\n        return [''];\r\n    }\r\n    else {\r\n        return segments;\r\n    }\r\n};\n\nconst printRoutes = (routes) => {\r\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\r\n    for (const chain of routes) {\r\n        const path = [];\r\n        chain.forEach(r => path.push(...r.path));\r\n        const ids = chain.map(r => r.id);\r\n        console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\r\n    }\r\n    console.groupEnd();\r\n};\r\nconst printRedirects = (redirects) => {\r\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\r\n    for (const redirect of redirects) {\r\n        if (redirect.to) {\r\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\r\n        }\r\n    }\r\n    console.groupEnd();\r\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false) => {\r\n    try {\r\n        // find next navigation outlet in the DOM\r\n        const outlet = searchNavNode(root);\r\n        // make sure we can continue interacting the DOM, otherwise abort\r\n        if (index >= chain.length || !outlet) {\r\n            return changed;\r\n        }\r\n        await outlet.componentOnReady();\r\n        const route = chain[index];\r\n        const result = await outlet.setRouteId(route.id, route.params, direction);\r\n        // if the outlet changed the page, reset navigation to neutral (no direction)\r\n        // this means nested outlets will not animate\r\n        if (result.changed) {\r\n            direction = ROUTER_INTENT_NONE;\r\n            changed = true;\r\n        }\r\n        // recursively set nested outlets\r\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed);\r\n        // once all nested outlets are visible let's make the parent visible too,\r\n        // using markVisible prevents flickering\r\n        if (result.markVisible) {\r\n            await result.markVisible();\r\n        }\r\n        return changed;\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nconst readNavState = async (root) => {\r\n    const ids = [];\r\n    let outlet;\r\n    let node = root;\r\n    // tslint:disable-next-line:no-constant-condition\r\n    while (true) {\r\n        outlet = searchNavNode(node);\r\n        if (outlet) {\r\n            const id = await outlet.getRouteId();\r\n            if (id) {\r\n                node = id.element;\r\n                id.element = undefined;\r\n                ids.push(id);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return { ids, outlet };\r\n};\r\nconst waitUntilNavNode = () => {\r\n    if (searchNavNode(document.body)) {\r\n        return Promise.resolve();\r\n    }\r\n    return new Promise(resolve => {\r\n        window.addEventListener('ionNavWillLoad', resolve, { once: true });\r\n    });\r\n};\r\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\r\nconst searchNavNode = (root) => {\r\n    if (!root) {\r\n        return undefined;\r\n    }\r\n    if (root.matches(QUERY)) {\r\n        return root;\r\n    }\r\n    const outlet = root.querySelector(QUERY);\r\n    return outlet ? outlet : undefined;\r\n};\n\nconst matchesRedirect = (input, route) => {\r\n    const { from, to } = route;\r\n    if (to === undefined) {\r\n        return false;\r\n    }\r\n    if (from.length > input.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < from.length; i++) {\r\n        const expected = from[i];\r\n        if (expected === '*') {\r\n            return true;\r\n        }\r\n        if (expected !== input[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return from.length === input.length;\r\n};\r\nconst routeRedirect = (path, routes) => {\r\n    return routes.find(route => matchesRedirect(path, route));\r\n};\r\nconst matchesIDs = (ids, chain) => {\r\n    const len = Math.min(ids.length, chain.length);\r\n    let i = 0;\r\n    for (; i < len; i++) {\r\n        if (ids[i].toLowerCase() !== chain[i].id) {\r\n            break;\r\n        }\r\n    }\r\n    return i;\r\n};\r\nconst matchesPath = (inputPath, chain) => {\r\n    const segments = new RouterSegments(inputPath);\r\n    let matchesDefault = false;\r\n    let allparams;\r\n    for (let i = 0; i < chain.length; i++) {\r\n        const path = chain[i].path;\r\n        if (path[0] === '') {\r\n            matchesDefault = true;\r\n        }\r\n        else {\r\n            for (const segment of path) {\r\n                const data = segments.next();\r\n                // data param\r\n                if (segment[0] === ':') {\r\n                    if (data === '') {\r\n                        return null;\r\n                    }\r\n                    allparams = allparams || [];\r\n                    const params = allparams[i] || (allparams[i] = {});\r\n                    params[segment.slice(1)] = data;\r\n                }\r\n                else if (data !== segment) {\r\n                    return null;\r\n                }\r\n            }\r\n            matchesDefault = false;\r\n        }\r\n    }\r\n    const matches = (matchesDefault)\r\n        ? matchesDefault === (segments.next() === '')\r\n        : true;\r\n    if (!matches) {\r\n        return null;\r\n    }\r\n    if (allparams) {\r\n        return chain.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, allparams[i])\r\n        }));\r\n    }\r\n    return chain;\r\n};\r\nconst mergeParams = (a, b) => {\r\n    if (!a && b) {\r\n        return b;\r\n    }\r\n    else if (a && !b) {\r\n        return a;\r\n    }\r\n    else if (a && b) {\r\n        return Object.assign(Object.assign({}, a), b);\r\n    }\r\n    return undefined;\r\n};\r\nconst routerIDsToChain = (ids, chains) => {\r\n    let match = null;\r\n    let maxMatches = 0;\r\n    const plainIDs = ids.map(i => i.id);\r\n    for (const chain of chains) {\r\n        const score = matchesIDs(plainIDs, chain);\r\n        if (score > maxMatches) {\r\n            match = chain;\r\n            maxMatches = score;\r\n        }\r\n    }\r\n    if (match) {\r\n        return match.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, ids[i] && ids[i].params)\r\n        }));\r\n    }\r\n    return null;\r\n};\r\nconst routerPathToChain = (path, chains) => {\r\n    let match = null;\r\n    let matches = 0;\r\n    for (const chain of chains) {\r\n        const matchedChain = matchesPath(path, chain);\r\n        if (matchedChain !== null) {\r\n            const score = computePriority(matchedChain);\r\n            if (score > matches) {\r\n                matches = score;\r\n                match = matchedChain;\r\n            }\r\n        }\r\n    }\r\n    return match;\r\n};\r\nconst computePriority = (chain) => {\r\n    let score = 1;\r\n    let level = 1;\r\n    for (const route of chain) {\r\n        for (const path of route.path) {\r\n            if (path[0] === ':') {\r\n                score += Math.pow(1, level);\r\n            }\r\n            else if (path !== '') {\r\n                score += Math.pow(2, level);\r\n            }\r\n            level++;\r\n        }\r\n    }\r\n    return score;\r\n};\r\nclass RouterSegments {\r\n    constructor(path) {\r\n        this.path = path.slice();\r\n    }\r\n    next() {\r\n        if (this.path.length > 0) {\r\n            return this.path.shift();\r\n        }\r\n        return '';\r\n    }\r\n}\n\nconst readRedirects = (root) => {\r\n    return Array.from(root.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\r\n        .map(el => {\r\n        const to = readProp(el, 'to');\r\n        return {\r\n            from: parsePath(readProp(el, 'from')),\r\n            to: to == null ? undefined : parsePath(to),\r\n        };\r\n    });\r\n};\r\nconst readRoutes = (root) => {\r\n    return flattenRouterTree(readRouteNodes(root));\r\n};\r\nconst readRouteNodes = (root, node = root) => {\r\n    return Array.from(node.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE' && el.component)\r\n        .map(el => {\r\n        const component = readProp(el, 'component');\r\n        if (component == null) {\r\n            throw new Error('component missing in ion-route');\r\n        }\r\n        return {\r\n            path: parsePath(readProp(el, 'url')),\r\n            id: component.toLowerCase(),\r\n            params: el.componentProps,\r\n            children: readRouteNodes(root, el)\r\n        };\r\n    });\r\n};\r\nconst readProp = (el, prop) => {\r\n    if (prop in el) {\r\n        return el[prop];\r\n    }\r\n    if (el.hasAttribute(prop)) {\r\n        return el.getAttribute(prop);\r\n    }\r\n    return null;\r\n};\r\nconst flattenRouterTree = (nodes) => {\r\n    const routes = [];\r\n    for (const node of nodes) {\r\n        flattenNode([], routes, node);\r\n    }\r\n    return routes;\r\n};\r\nconst flattenNode = (chain, routes, node) => {\r\n    const s = chain.slice();\r\n    s.push({\r\n        id: node.id,\r\n        path: node.path,\r\n        params: node.params\r\n    });\r\n    if (node.children.length === 0) {\r\n        routes.push(s);\r\n        return;\r\n    }\r\n    for (const sub of node.children) {\r\n        flattenNode(s, routes, sub);\r\n    }\r\n};\n\nconst Router = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.previousPath = null;\n        this.busy = false;\n        this.state = 0;\n        this.lastState = 0;\n        /**\n         * By default `ion-router` will match the routes at the root path (\"/\").\n         * That can be changed when\n         *\n         */\n        this.root = '/';\n        /**\n         * The router can work in two \"modes\":\n         * - With hash: `/index.html#/path/to/page`\n         * - Without hash: `/path/to/page`\n         *\n         * Using one or another might depend in the requirements of your app and/or where it's deployed.\n         *\n         * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n         * requires additional server-side configuration in order to properly work.\n         *\n         * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n         *\n         * By default, this property is `true`, change to `false` to allow hash-less URLs.\n         */\n        this.useHash = true;\n        this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n        this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    }\n    async componentWillLoad() {\n        console.debug('[ion-router] router will load');\n        await waitUntilNavNode();\n        console.debug('[ion-router] found nav');\n        await this.onRoutesChanged();\n    }\n    componentDidLoad() {\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n    onPopState() {\n        const direction = this.historyDirection();\n        const path = this.getPath();\n        console.debug('[ion-router] URL changed -> update nav', path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    onBackButton(ev) {\n        ev.detail.register(0, () => this.back());\n    }\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n    push(url, direction = 'forward') {\n        if (url.startsWith('.')) {\n            url = (new URL(url, window.location.href)).pathname;\n        }\n        console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n        const path = parsePath(url);\n        this.setPath(path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    /**\n     * Go back to previous page in the window.history.\n     */\n    back() {\n        window.history.back();\n        return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n    async printDebug() {\n        console.debug('CURRENT PATH', this.getPath());\n        console.debug('PREVIOUS PATH', this.previousPath);\n        printRoutes(readRoutes(this.el));\n        printRedirects(readRedirects(this.el));\n    }\n    /** @internal */\n    async navChanged(direction) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\n            return false;\n        }\n        const { ids, outlet } = await readNavState(window.document.body);\n        const routes = readRoutes(this.el);\n        const chain = routerIDsToChain(ids, routes);\n        if (!chain) {\n            console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n            return false;\n        }\n        const path = chainToPath(chain);\n        if (!path) {\n            console.warn('[ion-router] router could not match path because some required param is missing');\n            return false;\n        }\n        console.debug('[ion-router] nav changed -> update URL', ids, path);\n        this.setPath(path, direction);\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n        return true;\n    }\n    onRedirectChanged() {\n        const path = this.getPath();\n        if (path && routeRedirect(path, readRedirects(this.el))) {\n            this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n        }\n    }\n    onRoutesChanged() {\n        return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    }\n    historyDirection() {\n        const win = window;\n        if (win.history.state === null) {\n            this.state++;\n            win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n        }\n        const state = win.history.state;\n        const lastState = this.lastState;\n        this.lastState = state;\n        if (state > lastState) {\n            return ROUTER_INTENT_FORWARD;\n        }\n        else if (state < lastState) {\n            return ROUTER_INTENT_BACK;\n        }\n        else {\n            return ROUTER_INTENT_NONE;\n        }\n    }\n    async writeNavStateRoot(path, direction) {\n        if (!path) {\n            console.error('[ion-router] URL is not part of the routing set');\n            return false;\n        }\n        // lookup redirect rule\n        const redirects = readRedirects(this.el);\n        const redirect = routeRedirect(path, redirects);\n        let redirectFrom = null;\n        if (redirect) {\n            this.setPath(redirect.to, direction);\n            redirectFrom = redirect.from;\n            path = redirect.to;\n        }\n        // lookup route chain\n        const routes = readRoutes(this.el);\n        const chain = routerPathToChain(path, routes);\n        if (!chain) {\n            console.error('[ion-router] the path does not match any route');\n            return false;\n        }\n        // write DOM give\n        return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom);\n    }\n    async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        const unlock = await this.lock();\n        let changed = false;\n        try {\n            changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    async lock() {\n        const p = this.waitPromise;\n        let resolve;\n        this.waitPromise = new Promise(r => resolve = r);\n        if (p !== undefined) {\n            await p;\n        }\n        return resolve;\n    }\n    async writeNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, transition was cancelled');\n            return false;\n        }\n        this.busy = true;\n        // generate route event and emit will change\n        const routeEvent = this.routeChangeEvent(path, redirectFrom);\n        if (routeEvent) {\n            this.ionRouteWillChange.emit(routeEvent);\n        }\n        const changed = await writeNavState(node, chain, direction, index);\n        this.busy = false;\n        if (changed) {\n            console.debug('[ion-router] route changed', path);\n        }\n        // emit did change\n        if (routeEvent) {\n            this.ionRouteDidChange.emit(routeEvent);\n        }\n        return changed;\n    }\n    setPath(path, direction) {\n        this.state++;\n        writePath(window.history, this.root, this.useHash, path, direction, this.state);\n    }\n    getPath() {\n        return readPath(window.location, this.root, this.useHash);\n    }\n    routeChangeEvent(path, redirectFromPath) {\n        const from = this.previousPath;\n        const to = generatePath(path);\n        this.previousPath = to;\n        if (to === from) {\n            return null;\n        }\n        const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n        return {\n            from,\n            redirectedFrom,\n            to,\n        };\n    }\n    get el() { return getElement(this); }\n};\n\nconst RouterLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = (ev) => {\n            openURL(this.href, ev, this.routerDirection);\n        };\n    }\n    render() {\n        const mode = getIonMode(this);\n        const attrs = {\n            href: this.href,\n            rel: this.rel,\n            target: this.target\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'ion-activatable': true }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    }\n    static get style() { return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"; }\n};\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"],"sourceRoot":"webpack:///"}