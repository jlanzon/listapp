{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/shadow-css-4889ae62-23996f3f.js"],"names":["safeSelector","selector","placeholders","index","content","replace","_","keep","replaceBy","push","pseudo","exp","ss","restoreSafeSelector","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_selectorReSuffix","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","stripComments","input","_commentWithHashRe","extractCommentsWithHash","match","_ruleRe","_curlyRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","suffix","contentPrefix","startsWith","blocks","substring","length","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","join","strEscapedBlocks","insertPolyfillHostInCssText","convertColonRule","cssText","regExp","partReplacer","m","parts","r","i","p","trim","colonHostPartReplacer","host","convertColonHost","colonHostContextPartReplacer","indexOf","convertColonSlotted","slotAttr","compound","sel","convertColonHostContext","convertShadowDOMSelectors","reduce","result","pattern","makeScopeMatcher","scopeSelector","lre","rre","selectorNeedsScoping","re","test","applySimpleSelectorScope","hostSelector","lastIndex","before","colon","after","applyStrictSelectorScope","isRe","className","_scopeSelectorPart","scopedP","t","matches","safeContent","scopedSelector","startIndex","res","sep","hasHost","shouldScope","exec","separator","slice","scopedPart","scopeSelectorText","slotSelector","map","shallowPart","scopeSelectors","commentOriginalSelector","scopeCssText","scopeId","hostScopeId","slotScopeId","scopeCss","commentsWithHash","orgSelectors","processCommentedSelector","placeholder","comment","scopedCssText","forEach"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAc;AAC/B,MAAMC,YAAY,GAAG,EAArB;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,OAAJ,CAH+B,CAI/B;AACA;;AACAH,UAAQ,GAAGA,QAAQ,CAACI,OAAT,CAAiB,eAAjB,EAAkC,UAACC,CAAD,EAAIC,IAAJ,EAAa;AACtD,QAAMC,SAAS,kBAAWL,KAAX,OAAf;AACAD,gBAAY,CAACO,IAAb,CAAkBF,IAAlB;AACAJ,SAAK;AACL,WAAOK,SAAP;AACH,GALU,CAAX,CAN+B,CAY/B;AACA;;AACAJ,SAAO,GAAGH,QAAQ,CAACI,OAAT,CAAiB,2BAAjB,EAA8C,UAACC,CAAD,EAAII,MAAJ,EAAYC,GAAZ,EAAoB;AACxE,QAAMH,SAAS,kBAAWL,KAAX,OAAf;AACAD,gBAAY,CAACO,IAAb,CAAkBE,GAAlB;AACAR,SAAK;AACL,WAAOO,MAAM,GAAGF,SAAhB;AACH,GALS,CAAV;AAMA,MAAMI,EAAE,GAAG;AACPR,WAAO,EAAPA,OADO;AAEPF,gBAAY,EAAZA;AAFO,GAAX;AAIA,SAAOU,EAAP;AACH,CAzBD;;AA0BA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACX,YAAD,EAAeE,OAAf,EAA2B;AACnD,SAAOA,OAAO,CAACC,OAAR,CAAgB,eAAhB,EAAiC,UAACC,CAAD,EAAIH,KAAJ;AAAA,WAAcD,YAAY,CAAC,CAACC,KAAF,CAA1B;AAAA,GAAjC,CAAP;AACH,CAFD;;AAGA,IAAMW,aAAa,GAAG,gBAAtB;AACA,IAAMC,gBAAgB,GAAG,mBAAzB,C,CACA;;AACA,IAAMC,oBAAoB,GAAG,mBAA7B;;AACA,IAAMC,YAAY,GAAG,aACjB,2BADiB,GAEjB,gBAFJ;;AAGA,IAAMC,eAAe,GAAG,IAAIC,MAAJ,CAAW,MAAML,aAAN,GAAsBG,YAAjC,EAA+C,KAA/C,CAAxB;;AACA,IAAMG,sBAAsB,GAAG,IAAID,MAAJ,CAAW,MAAMH,oBAAN,GAA6BC,YAAxC,EAAsD,KAAtD,CAA/B;;AACA,IAAMI,kBAAkB,GAAG,IAAIF,MAAJ,CAAW,MAAMJ,gBAAN,GAAyBE,YAApC,EAAkD,KAAlD,CAA3B;;AACA,IAAMK,yBAAyB,GAAGR,aAAa,GAAG,gBAAlD;;AACA,IAAMS,2BAA2B,GAAG,sCAApC;AACA,IAAMC,qBAAqB,GAAG,CAC1B,WAD0B,EAE1B,YAF0B,CAA9B;AAIA,IAAMC,iBAAiB,GAAG,6BAA1B;AACA,IAAMC,eAAe,GAAG,mBAAxB;AACA,IAAMC,YAAY,GAAG,UAArB;AACA,IAAMC,eAAe,GAAG,cAAxB;AACA,IAAMC,mBAAmB,GAAG,kBAA5B;AACA,IAAMC,UAAU,GAAG,sBAAnB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,SAAOA,KAAK,CAAC3B,OAAN,CAAcyB,UAAd,EAA0B,EAA1B,CAAP;AACH,CAFD;;AAGA,IAAMG,kBAAkB,GAAG,8CAA3B;;AACA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACF,KAAD,EAAW;AACvC,SAAOA,KAAK,CAACG,KAAN,CAAYF,kBAAZ,KAAmC,EAA1C;AACH,CAFD;;AAGA,IAAMG,OAAO,GAAG,uDAAhB;AACA,IAAMC,QAAQ,GAAG,SAAjB;AACA,IAAMC,UAAU,GAAG,GAAnB;AACA,IAAMC,WAAW,GAAG,GAApB;AACA,IAAMC,iBAAiB,GAAG,SAA1B;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACT,KAAD,EAAQU,YAAR,EAAyB;AAC1C,MAAMC,sBAAsB,GAAGC,YAAY,CAACZ,KAAD,CAA3C;AACA,MAAIa,cAAc,GAAG,CAArB;AACA,SAAOF,sBAAsB,CAACG,aAAvB,CAAqCzC,OAArC,CAA6C+B,OAA7C,EAAsD,YAAU;AACnE,QAAMnC,QAAQ,mDAAd;AACA,QAAIG,OAAO,GAAG,EAAd;AACA,QAAI2C,MAAM,mDAAV;AACA,QAAIC,aAAa,GAAG,EAApB;;AACA,QAAID,MAAM,IAAIA,MAAM,CAACE,UAAP,CAAkB,MAAMT,iBAAxB,CAAd,EAA0D;AACtDpC,aAAO,GAAGuC,sBAAsB,CAACO,MAAvB,CAA8BL,cAAc,EAA5C,CAAV;AACAE,YAAM,GAAGA,MAAM,CAACI,SAAP,CAAiBX,iBAAiB,CAACY,MAAlB,GAA2B,CAA5C,CAAT;AACAJ,mBAAa,GAAG,GAAhB;AACH;;AACD,QAAMK,OAAO,GAAG;AACZpD,cAAQ,EAARA,QADY;AAEZG,aAAO,EAAPA;AAFY,KAAhB;AAIA,QAAMkD,IAAI,GAAGZ,YAAY,CAACW,OAAD,CAAzB;AACA,8EAAiBC,IAAI,CAACrD,QAAtB,kEAAwC+C,aAAxC,SAAwDM,IAAI,CAAClD,OAA7D,SAAuE2C,MAAvE;AACH,GAhBM,CAAP;AAiBH,CApBD;;AAqBA,IAAMH,YAAY,GAAG,SAAfA,YAAe,CAACZ,KAAD,EAAW;AAC5B,MAAMuB,UAAU,GAAGvB,KAAK,CAACwB,KAAN,CAAYnB,QAAZ,CAAnB;AACA,MAAMoB,WAAW,GAAG,EAApB;AACA,MAAMC,aAAa,GAAG,EAAtB;AACA,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,iBAAiB,GAAG,EAAxB;;AACA,OAAK,IAAIC,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAGN,UAAU,CAACH,MAA/C,EAAuDS,SAAS,EAAhE,EAAoE;AAChE,QAAMC,IAAI,GAAGP,UAAU,CAACM,SAAD,CAAvB;;AACA,QAAIC,IAAI,KAAKvB,WAAb,EAA0B;AACtBoB,kBAAY;AACf;;AACD,QAAIA,YAAY,GAAG,CAAnB,EAAsB;AAClBC,uBAAiB,CAACnD,IAAlB,CAAuBqD,IAAvB;AACH,KAFD,MAGK;AACD,UAAIF,iBAAiB,CAACR,MAAlB,GAA2B,CAA/B,EAAkC;AAC9BM,qBAAa,CAACjD,IAAd,CAAmBmD,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,CAAnB;AACAN,mBAAW,CAAChD,IAAZ,CAAiB+B,iBAAjB;AACAoB,yBAAiB,GAAG,EAApB;AACH;;AACDH,iBAAW,CAAChD,IAAZ,CAAiBqD,IAAjB;AACH;;AACD,QAAIA,IAAI,KAAKxB,UAAb,EAAyB;AACrBqB,kBAAY;AACf;AACJ;;AACD,MAAIC,iBAAiB,CAACR,MAAlB,GAA2B,CAA/B,EAAkC;AAC9BM,iBAAa,CAACjD,IAAd,CAAmBmD,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,CAAnB;AACAN,eAAW,CAAChD,IAAZ,CAAiB+B,iBAAjB;AACH;;AACD,MAAMwB,gBAAgB,GAAG;AACrBlB,iBAAa,EAAEW,WAAW,CAACM,IAAZ,CAAiB,EAAjB,CADM;AAErBb,UAAM,EAAEQ;AAFa,GAAzB;AAIA,SAAOM,gBAAP;AACH,CAnCD;;AAoCA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAChE,QAAD,EAAc;AAC9CA,UAAQ,GAAGA,QAAQ,CACdI,OADM,CACEwB,mBADF,EACuBb,oBADvB,EAENX,OAFM,CAEEsB,YAFF,EAEgBb,aAFhB,EAGNT,OAHM,CAGEuB,eAHF,EAGmBb,gBAHnB,CAAX;AAIA,SAAOd,QAAP;AACH,CAND;;AAOA,IAAMiE,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAUC,MAAV,EAAkBC,YAAlB,EAAmC;AACxD;AACA,SAAOF,OAAO,CAAC9D,OAAR,CAAgB+D,MAAhB,EAAwB,YAAU;AAAA,sCAANE,CAAM;AAANA,OAAM;AAAA;;AACrC,QAAIA,CAAC,CAAC,CAAD,CAAL,EAAU;AACN,UAAMC,KAAK,GAAGD,CAAC,CAAC,CAAD,CAAD,CAAKd,KAAL,CAAW,GAAX,CAAd;AACA,UAAMgB,CAAC,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACnB,MAA1B,EAAkCqB,CAAC,EAAnC,EAAuC;AACnC,YAAMC,CAAC,GAAGH,KAAK,CAACE,CAAD,CAAL,CAASE,IAAT,EAAV;AACA,YAAI,CAACD,CAAL,EACI;AACJF,SAAC,CAAC/D,IAAF,CAAO4D,YAAY,CAAC/C,yBAAD,EAA4BoD,CAA5B,EAA+BJ,CAAC,CAAC,CAAD,CAAhC,CAAnB;AACH;;AACD,aAAOE,CAAC,CAACT,IAAF,CAAO,GAAP,CAAP;AACH,KAVD,MAWK;AACD,aAAOzC,yBAAyB,GAAGgD,CAAC,CAAC,CAAD,CAApC;AACH;AACJ,GAfM,CAAP;AAgBH,CAlBD;;AAmBA,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD,EAAOf,IAAP,EAAaf,MAAb,EAAwB;AAClD,SAAO8B,IAAI,GAAGf,IAAI,CAACzD,OAAL,CAAaS,aAAb,EAA4B,EAA5B,CAAP,GAAyCiC,MAAhD;AACH,CAFD;;AAGA,IAAM+B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACX,OAAD,EAAa;AAClC,SAAOD,gBAAgB,CAACC,OAAD,EAAUjD,eAAV,EAA2B0D,qBAA3B,CAAvB;AACH,CAFD;;AAGA,IAAMG,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACF,IAAD,EAAOf,IAAP,EAAaf,MAAb,EAAwB;AACzD,MAAIe,IAAI,CAACkB,OAAL,CAAalE,aAAb,IAA8B,CAAC,CAAnC,EAAsC;AAClC,WAAO8D,qBAAqB,CAACC,IAAD,EAAOf,IAAP,EAAaf,MAAb,CAA5B;AACH,GAFD,MAGK;AACD,WAAO8B,IAAI,GAAGf,IAAP,GAAcf,MAAd,GAAuB,IAAvB,GAA8Be,IAA9B,GAAqC,GAArC,GAA2Ce,IAA3C,GAAkD9B,MAAzD;AACH;AACJ,CAPD;;AAQA,IAAMkC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACd,OAAD,EAAUe,QAAV,EAAuB;AAC/C,MAAMd,MAAM,GAAG/C,kBAAf;AACA,SAAO8C,OAAO,CAAC9D,OAAR,CAAgB+D,MAAhB,EAAwB,YAAU;AAAA,uCAANE,CAAM;AAANA,OAAM;AAAA;;AACrC,QAAIA,CAAC,CAAC,CAAD,CAAL,EAAU;AACN,UAAMa,QAAQ,GAAGb,CAAC,CAAC,CAAD,CAAD,CAAKK,IAAL,EAAjB;AACA,UAAM5B,MAAM,GAAGuB,CAAC,CAAC,CAAD,CAAhB;AACA,UAAMc,GAAG,GAAG,MAAMF,QAAN,GAAiB,KAAjB,GAAyBC,QAAzB,GAAoCpC,MAAhD;AACA,aAAOqC,GAAP;AACH,KALD,MAMK;AACD,aAAO9D,yBAAyB,GAAGgD,CAAC,CAAC,CAAD,CAApC;AACH;AACJ,GAVM,CAAP;AAWH,CAbD;;AAcA,IAAMe,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAClB,OAAD,EAAa;AACzC,SAAOD,gBAAgB,CAACC,OAAD,EAAU/C,sBAAV,EAAkC2D,4BAAlC,CAAvB;AACH,CAFD;;AAGA,IAAMO,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACnB,OAAD,EAAa;AAC3C,SAAO3C,qBAAqB,CAAC+D,MAAtB,CAA6B,UAACC,MAAD,EAASC,OAAT;AAAA,WAAqBD,MAAM,CAACnF,OAAP,CAAeoF,OAAf,EAAwB,GAAxB,CAArB;AAAA,GAA7B,EAAgFtB,OAAhF,CAAP;AACH,CAFD;;AAGA,IAAMuB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,aAAD,EAAmB;AACxC,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,GAAG,GAAG,KAAZ;AACAF,eAAa,GAAGA,aAAa,CAACtF,OAAd,CAAsBuF,GAAtB,EAA2B,KAA3B,EAAkCvF,OAAlC,CAA0CwF,GAA1C,EAA+C,KAA/C,CAAhB;AACA,SAAO,IAAI1E,MAAJ,CAAW,OAAOwE,aAAP,GAAuB,GAAvB,GAA6BlE,iBAAxC,EAA2D,GAA3D,CAAP;AACH,CALD;;AAMA,IAAMqE,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAC7F,QAAD,EAAW0F,aAAX,EAA6B;AACtD,MAAMI,EAAE,GAAGL,gBAAgB,CAACC,aAAD,CAA3B;AACA,SAAO,CAACI,EAAE,CAACC,IAAH,CAAQ/F,QAAR,CAAR;AACH,CAHD;;AAIA,IAAMgG,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAChG,QAAD,EAAW0F,aAAX,EAA0BO,YAA1B,EAA2C;AACxE;AACAxE,iBAAe,CAACyE,SAAhB,GAA4B,CAA5B;;AACA,MAAIzE,eAAe,CAACsE,IAAhB,CAAqB/F,QAArB,CAAJ,EAAoC;AAChC,QAAMO,SAAS,cAAO0F,YAAP,CAAf;AACA,WAAOjG,QAAQ,CACVI,OADE,CACMkB,2BADN,EACmC,UAACjB,CAAD,EAAIL,QAAJ,EAAiB;AACvD,aAAOA,QAAQ,CAACI,OAAT,CAAiB,iBAAjB,EAAoC,UAACC,CAAD,EAAI8F,MAAJ,EAAYC,KAAZ,EAAmBC,KAAnB,EAA6B;AACpE,eAAOF,MAAM,GAAG5F,SAAT,GAAqB6F,KAArB,GAA6BC,KAApC;AACH,OAFM,CAAP;AAGH,KALM,EAMFjG,OANE,CAMMqB,eANN,EAMuBlB,SAAS,GAAG,GANnC,CAAP;AAOH;;AACD,SAAOmF,aAAa,GAAG,GAAhB,GAAsB1F,QAA7B;AACH,CAdD;;AAeA,IAAMsG,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACtG,QAAD,EAAW0F,aAAX,EAA0BO,YAA1B,EAA2C;AACxE,MAAMM,IAAI,GAAG,kBAAb;AACAb,eAAa,GAAGA,aAAa,CAACtF,OAAd,CAAsBmG,IAAtB,EAA4B,UAAClG,CAAD;AAAA;AAAA,GAA5B,CAAhB;AACA,MAAMmG,SAAS,GAAG,MAAMd,aAAxB;;AACA,MAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAAChC,CAAD,EAAO;AAC9B,QAAIiC,OAAO,GAAGjC,CAAC,CAACC,IAAF,EAAd;;AACA,QAAI,CAACgC,OAAL,EAAc;AACV,aAAO,EAAP;AACH;;AACD,QAAIjC,CAAC,CAACM,OAAF,CAAU1D,yBAAV,IAAuC,CAAC,CAA5C,EAA+C;AAC3CqF,aAAO,GAAGV,wBAAwB,CAACvB,CAAD,EAAIiB,aAAJ,EAAmBO,YAAnB,CAAlC;AACH,KAFD,MAGK;AACD;AACA,UAAMU,CAAC,GAAGlC,CAAC,CAACrE,OAAF,CAAUqB,eAAV,EAA2B,EAA3B,CAAV;;AACA,UAAIkF,CAAC,CAACxD,MAAF,GAAW,CAAf,EAAkB;AACd,YAAMyD,OAAO,GAAGD,CAAC,CAACzE,KAAF,CAAQ,iBAAR,CAAhB;;AACA,YAAI0E,OAAJ,EAAa;AACTF,iBAAO,GAAGE,OAAO,CAAC,CAAD,CAAP,GAAaJ,SAAb,GAAyBI,OAAO,CAAC,CAAD,CAAhC,GAAsCA,OAAO,CAAC,CAAD,CAAvD;AACH;AACJ;AACJ;;AACD,WAAOF,OAAP;AACH,GAnBD;;AAoBA,MAAMG,WAAW,GAAG9G,YAAY,CAACC,QAAD,CAAhC;AACAA,UAAQ,GAAG6G,WAAW,CAAC1G,OAAvB;AACA,MAAI2G,cAAc,GAAG,EAArB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,GAAJ;AACA,MAAMC,GAAG,GAAG,qBAAZ,CA7BwE,CA8BxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAGlH,QAAQ,CAAC+E,OAAT,CAAiB1D,yBAAjB,IAA8C,CAAC,CAA/D,CAzCwE,CA0CxE;;AACA,MAAI8F,WAAW,GAAG,CAACD,OAAnB;;AACA,SAAO,CAACF,GAAG,GAAGC,GAAG,CAACG,IAAJ,CAASpH,QAAT,CAAP,MAA+B,IAAtC,EAA4C;AACxC,QAAMqH,SAAS,GAAGL,GAAG,CAAC,CAAD,CAArB;;AACA,QAAMnD,KAAI,GAAG7D,QAAQ,CAACsH,KAAT,CAAeP,UAAf,EAA2BC,GAAG,CAAC9G,KAA/B,EAAsCwE,IAAtC,EAAb;;AACAyC,eAAW,GAAGA,WAAW,IAAItD,KAAI,CAACkB,OAAL,CAAa1D,yBAAb,IAA0C,CAAC,CAAxE;AACA,QAAMkG,UAAU,GAAGJ,WAAW,GAAGV,kBAAkB,CAAC5C,KAAD,CAArB,GAA8BA,KAA5D;AACAiD,kBAAc,cAAOS,UAAP,cAAqBF,SAArB,MAAd;AACAN,cAAU,GAAGE,GAAG,CAACf,SAAjB;AACH;;AACD,MAAMrC,IAAI,GAAG7D,QAAQ,CAACkD,SAAT,CAAmB6D,UAAnB,CAAb;AACAI,aAAW,GAAGA,WAAW,IAAItD,IAAI,CAACkB,OAAL,CAAa1D,yBAAb,IAA0C,CAAC,CAAxE;AACAyF,gBAAc,IAAIK,WAAW,GAAGV,kBAAkB,CAAC5C,IAAD,CAArB,GAA8BA,IAA3D,CAtDwE,CAuDxE;;AACA,SAAOjD,mBAAmB,CAACiG,WAAW,CAAC5G,YAAb,EAA2B6G,cAA3B,CAA1B;AACH,CAzDD;;AA0DA,IAAMpB,aAAa,GAAG,SAAhBA,aAAgB,CAAC1F,QAAD,EAAWwH,iBAAX,EAA8BvB,YAA9B,EAA4CwB,YAA5C,EAA6D;AAC/E,SAAOzH,QAAQ,CAACuD,KAAT,CAAe,GAAf,EACFmE,GADE,CACE,UAAAC,WAAW,EAAI;AACpB,QAAIF,YAAY,IAAIE,WAAW,CAAC5C,OAAZ,CAAoB,MAAM0C,YAA1B,IAA0C,CAAC,CAA/D,EAAkE;AAC9D,aAAOE,WAAW,CAACjD,IAAZ,EAAP;AACH;;AACD,QAAImB,oBAAoB,CAAC8B,WAAD,EAAcH,iBAAd,CAAxB,EAA0D;AACtD,aAAOlB,wBAAwB,CAACqB,WAAD,EAAcH,iBAAd,EAAiCvB,YAAjC,CAAxB,CAAuEvB,IAAvE,EAAP;AACH,KAFD,MAGK;AACD,aAAOiD,WAAW,CAACjD,IAAZ,EAAP;AACH;AACJ,GAXM,EAYFZ,IAZE,CAYG,IAZH,CAAP;AAaH,CAdD;;AAeA,IAAM8D,cAAc,GAAG,SAAjBA,cAAiB,CAAC1D,OAAD,EAAUsD,iBAAV,EAA6BvB,YAA7B,EAA2CwB,YAA3C,EAAyDI,uBAAzD,EAAqF;AACxG,SAAOrF,YAAY,CAAC0B,OAAD,EAAU,UAACb,IAAD,EAAU;AACnC,QAAIrD,QAAQ,GAAGqD,IAAI,CAACrD,QAApB;AACA,QAAIG,OAAO,GAAGkD,IAAI,CAAClD,OAAnB;;AACA,QAAIkD,IAAI,CAACrD,QAAL,CAAc,CAAd,MAAqB,GAAzB,EAA8B;AAC1BA,cAAQ,GAAG0F,aAAa,CAACrC,IAAI,CAACrD,QAAN,EAAgBwH,iBAAhB,EAAmCvB,YAAnC,EAAiDwB,YAAjD,CAAxB;AACH,KAFD,MAGK,IAAIpE,IAAI,CAACrD,QAAL,CAAcgD,UAAd,CAAyB,QAAzB,KAAsCK,IAAI,CAACrD,QAAL,CAAcgD,UAAd,CAAyB,WAAzB,CAAtC,IACLK,IAAI,CAACrD,QAAL,CAAcgD,UAAd,CAAyB,OAAzB,CADK,IACgCK,IAAI,CAACrD,QAAL,CAAcgD,UAAd,CAAyB,WAAzB,CADpC,EAC2E;AAC5E7C,aAAO,GAAGyH,cAAc,CAACvE,IAAI,CAAClD,OAAN,EAAeqH,iBAAf,EAAkCvB,YAAlC,EAAgDwB,YAAhD,CAAxB;AACH;;AACD,QAAMrE,OAAO,GAAG;AACZpD,cAAQ,EAAEA,QAAQ,CAACI,OAAT,CAAiB,SAAjB,EAA4B,GAA5B,EAAiCsE,IAAjC,EADE;AAEZvE,aAAO,EAAPA;AAFY,KAAhB;AAIA,WAAOiD,OAAP;AACH,GAfkB,CAAnB;AAgBH,CAjBD;;AAkBA,IAAM0E,YAAY,GAAG,SAAfA,YAAe,CAAC5D,OAAD,EAAU6D,OAAV,EAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CJ,uBAA7C,EAAyE;AAC1F3D,SAAO,GAAGF,2BAA2B,CAACE,OAAD,CAArC;AACAA,SAAO,GAAGW,gBAAgB,CAACX,OAAD,CAA1B;AACAA,SAAO,GAAGkB,uBAAuB,CAAClB,OAAD,CAAjC;AACAA,SAAO,GAAGc,mBAAmB,CAACd,OAAD,EAAU+D,WAAV,CAA7B;AACA/D,SAAO,GAAGmB,yBAAyB,CAACnB,OAAD,CAAnC;;AACA,MAAI6D,OAAJ,EAAa;AACT7D,WAAO,GAAG0D,cAAc,CAAC1D,OAAD,EAAU6D,OAAV,EAAmBC,WAAnB,EAAgCC,WAAhC,CAAxB;AACH;;AACD/D,SAAO,GAAGA,OAAO,CAAC9D,OAAR,CAAgB,+BAAhB,aAAqD4H,WAArD,EAAV;AACA9D,SAAO,GAAGA,OAAO,CAAC9D,OAAR,CAAgB,sBAAhB,EAAwC,MAAxC,CAAV;AACA,SAAO8D,OAAO,CAACQ,IAAR,EAAP;AACH,CAZD;;AAaA,IAAMwD,QAAQ,GAAG,SAAXA,QAAW,CAAChE,OAAD,EAAU6D,OAAV,EAAmBF,uBAAnB,EAA+C;AAC5D,MAAMG,WAAW,GAAGD,OAAO,GAAG,IAA9B;AACA,MAAME,WAAW,GAAGF,OAAO,GAAG,IAA9B;AACA,MAAMI,gBAAgB,GAAGlG,uBAAuB,CAACiC,OAAD,CAAhD;AACAA,SAAO,GAAGpC,aAAa,CAACoC,OAAD,CAAvB;AACA,MAAMkE,YAAY,GAAG,EAArB;;AACA,MAAIP,uBAAJ,EAA6B;AACzB,QAAMQ,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAChF,IAAD,EAAU;AACvC,UAAMiF,WAAW,oBAAaF,YAAY,CAACjF,MAA1B,UAAjB;AACA,UAAMoF,OAAO,iBAAUlF,IAAI,CAACrD,QAAf,OAAb;AACAoI,kBAAY,CAAC5H,IAAb,CAAkB;AAAE8H,mBAAW,EAAXA,WAAF;AAAeC,eAAO,EAAPA;AAAf,OAAlB;AACAlF,UAAI,CAACrD,QAAL,GAAgBsI,WAAW,GAAGjF,IAAI,CAACrD,QAAnC;AACA,aAAOqD,IAAP;AACH,KAND;;AAOAa,WAAO,GAAG1B,YAAY,CAAC0B,OAAD,EAAU,UAAAb,IAAI,EAAI;AACpC,UAAIA,IAAI,CAACrD,QAAL,CAAc,CAAd,MAAqB,GAAzB,EAA8B;AAC1B,eAAOqI,wBAAwB,CAAChF,IAAD,CAA/B;AACH,OAFD,MAGK,IAAIA,IAAI,CAACrD,QAAL,CAAcgD,UAAd,CAAyB,QAAzB,KAAsCK,IAAI,CAACrD,QAAL,CAAcgD,UAAd,CAAyB,WAAzB,CAAtC,IACLK,IAAI,CAACrD,QAAL,CAAcgD,UAAd,CAAyB,OAAzB,CADK,IACgCK,IAAI,CAACrD,QAAL,CAAcgD,UAAd,CAAyB,WAAzB,CADpC,EAC2E;AAC5EK,YAAI,CAAClD,OAAL,GAAeqC,YAAY,CAACa,IAAI,CAAClD,OAAN,EAAekI,wBAAf,CAA3B;AACA,eAAOhF,IAAP;AACH;;AACD,aAAOA,IAAP;AACH,KAVqB,CAAtB;AAWH;;AACD,MAAMmF,aAAa,GAAGV,YAAY,CAAC5D,OAAD,EAAU6D,OAAV,EAAmBC,WAAnB,EAAgCC,WAAhC,CAAlC;AACA/D,SAAO,GAAG,CAACsE,aAAD,4IAAmBL,gBAAnB,GAAqCrE,IAArC,CAA0C,IAA1C,CAAV;;AACA,MAAI+D,uBAAJ,EAA6B;AACzBO,gBAAY,CAACK,OAAb,CAAqB,gBAA8B;AAAA,UAA3BH,WAA2B,QAA3BA,WAA2B;AAAA,UAAdC,OAAc,QAAdA,OAAc;AAC/CrE,aAAO,GAAGA,OAAO,CAAC9D,OAAR,CAAgBkI,WAAhB,EAA6BC,OAA7B,CAAV;AACH,KAFD;AAGH;;AACD,SAAOrE,OAAP;AACH,CAlCD","file":"shadow-css-4889ae62-23996f3f-js.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nconst safeSelector = (selector) => {\n    const placeholders = [];\n    let index = 0;\n    let content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n        const replaceBy = `__ph-${index}__`;\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n        const replaceBy = `__ph-${index}__`;\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    const ss = {\n        content,\n        placeholders,\n    };\n    return ss;\n};\nconst restoreSafeSelector = (placeholders, content) => {\n    return content.replace(/__ph-(\\d+)__/g, (_, index) => placeholders[+index]);\n};\nconst _polyfillHost = '-shadowcsshost';\nconst _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst _polyfillHostContext = '-shadowcsscontext';\nconst _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nconst _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nconst _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g\n];\nconst _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nconst _polyfillHostRe = /-shadowcsshost/gim;\nconst _colonHostRe = /:host/gim;\nconst _colonSlottedRe = /::slotted/gim;\nconst _colonHostContextRe = /:host-context/gim;\nconst _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nconst stripComments = (input) => {\n    return input.replace(_commentRe, '');\n};\nconst _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nconst extractCommentsWithHash = (input) => {\n    return input.match(_commentWithHashRe) || [];\n};\nconst _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst _curlyRe = /([{}])/g;\nconst OPEN_CURLY = '{';\nconst CLOSE_CURLY = '}';\nconst BLOCK_PLACEHOLDER = '%BLOCK%';\nconst processRules = (input, ruleCallback) => {\n    const inputWithEscapedBlocks = escapeBlocks(input);\n    let nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, (...m) => {\n        const selector = m[2];\n        let content = '';\n        let suffix = m[4];\n        let contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        const cssRule = {\n            selector,\n            content\n        };\n        const rule = ruleCallback(cssRule);\n        return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n    });\n};\nconst escapeBlocks = (input) => {\n    const inputParts = input.split(_curlyRe);\n    const resultParts = [];\n    const escapedBlocks = [];\n    let bracketCount = 0;\n    let currentBlockParts = [];\n    for (let partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        const part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    const strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks\n    };\n    return strEscapedBlocks;\n};\nconst insertPolyfillHostInCssText = (selector) => {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nconst convertColonRule = (cssText, regExp, partReplacer) => {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, (...m) => {\n        if (m[2]) {\n            const parts = m[2].split(',');\n            const r = [];\n            for (let i = 0; i < parts.length; i++) {\n                const p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nconst colonHostPartReplacer = (host, part, suffix) => {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nconst convertColonHost = (cssText) => {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nconst colonHostContextPartReplacer = (host, part, suffix) => {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nconst convertColonSlotted = (cssText, slotAttr) => {\n    const regExp = _cssColonSlottedRe;\n    return cssText.replace(regExp, (...m) => {\n        if (m[2]) {\n            const compound = m[2].trim();\n            const suffix = m[3];\n            const sel = '.' + slotAttr + ' > ' + compound + suffix;\n            return sel;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nconst convertColonHostContext = (cssText) => {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nconst convertShadowDOMSelectors = (cssText) => {\n    return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n};\nconst makeScopeMatcher = (scopeSelector) => {\n    const lre = /\\[/g;\n    const rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nconst selectorNeedsScoping = (selector, scopeSelector) => {\n    const re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nconst applySimpleSelectorScope = (selector, scopeSelector, hostSelector) => {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        const replaceBy = `.${hostSelector}`;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, (_, selector) => {\n            return selector.replace(/([^:]*)(:*)(.*)/, (_, before, colon, after) => {\n                return before + replaceBy + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nconst applyStrictSelectorScope = (selector, scopeSelector, hostSelector) => {\n    const isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, (_, ...parts) => parts[0]);\n    const className = '.' + scopeSelector;\n    const _scopeSelectorPart = (p) => {\n        let scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            const t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                const matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    const safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    let scopedSelector = '';\n    let startIndex = 0;\n    let res;\n    const sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    const hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    let shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        const separator = res[1];\n        const part = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        const scopedPart = shouldScope ? _scopeSelectorPart(part) : part;\n        scopedSelector += `${scopedPart} ${separator} `;\n        startIndex = sep.lastIndex;\n    }\n    const part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nconst scopeSelector = (selector, scopeSelectorText, hostSelector, slotSelector) => {\n    return selector.split(',')\n        .map(shallowPart => {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nconst scopeSelectors = (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) => {\n    return processRules(cssText, (rule) => {\n        let selector = rule.selector;\n        let content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n            rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        const cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content\n        };\n        return cssRule;\n    });\n};\nconst scopeCssText = (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) => {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    cssText = convertColonSlotted(cssText, slotScopeId);\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, `.${hostScopeId}`);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return cssText.trim();\n};\nconst scopeCss = (cssText, scopeId, commentOriginalSelector) => {\n    const hostScopeId = scopeId + '-h';\n    const slotScopeId = scopeId + '-s';\n    const commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    const orgSelectors = [];\n    if (commentOriginalSelector) {\n        const processCommentedSelector = (rule) => {\n            const placeholder = `/*!@___${orgSelectors.length}___*/`;\n            const comment = `/*!@${rule.selector}*/`;\n            orgSelectors.push({ placeholder, comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, rule => {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    const scopedCssText = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = [scopedCssText, ...commentsWithHash].join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(({ placeholder, comment }) => {\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    return cssText;\n};\n\nexport { scopeCss };\n"],"sourceRoot":"webpack:///"}