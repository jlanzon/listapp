{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-menu_4-md.entry.js"],"names":["Menu","hostRef","registerInstance","lastOnEnd","blocker","GESTURE_CONTROLLER","createBlocker","disableScroll","mode","getIonMode","isAnimating","_isOpen","isPaneVisible","isEndSide","disabled","side","swipeGesture","maxEdgeStart","ionWillOpen","createEvent","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","type","oldType","contentEl","undefined","classList","remove","add","removeAttribute","menuInnerEl","animation","updateState","emit","open","config","get","el","parent","parentNode","contentId","console","warn","content","document","getElementById","querySelector","tagName","error","typeChanged","sideChanged","menuController","_register","gesture","createGesture","gestureName","gesturePriority","threshold","canStart","ev","onWillStart","onStart","onMove","onEnd","destroy","_unregister","backdropEl","detail","isPane","timeStamp","shouldClose","composedPath","includes","preventDefault","stopPropagation","close","Promise","resolve","_isActive","animated","setOpen","shouldOpen","_setOpen","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","_createAnimation","getBoolean","duration","fill","isReversed","ani","direction","easing","playAsync","playSync","canSwipe","_getOpenSync","checkEdgeSide","window","currentX","assert","progressStart","delta","computeDelta","deltaX","stepValue","progressStep","isOpen","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","newStepValue","adjustedStepValue","getTimeGivenProgression","Point","clamp","onFinish","oneTimeCallback","progressEnd","SHOW_MENU","SHOW_BACKDROP","block","unblock","MENU_CONTENT_OPEN","stop","isActive","setDisabled","forceClosing","_setActiveMenu","h","Host","role","class","ref","tappable","getElement","Math","max","win","posX","innerWidth","updateVisibility","menu","menuEl","MenuButton","visible","autoHide","onClick","toggle","visibilityChanged","color","menuIcon","hidden","attrs","Object","assign","createColorClasses","icon","lazy","MenuController","enable","isEnabled","getOpen","getMenus","name","registerAnimation","MenuToggle"],"mappings":"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","file":"40.js","sourcesContent":["import { r as registerInstance, c as getIonMode, d as createEvent, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport { b as config } from './config-3c7f3790.js';\nimport { i as isEndSide, b as assert, c as clamp } from './helpers-46f4a262.js';\nimport './animation-af478fe9.js';\nimport { GESTURE_CONTROLLER } from './index-624eea58.js';\nimport { m as menuController } from './index-1e5940d5.js';\nimport { c as createColorClasses } from './theme-18cbe2cc.js';\nimport { g as getTimeGivenProgression, P as Point } from './cubic-bezier-2812fda3.js';\n\nconst Menu = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.mode = getIonMode(this);\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        /**\n         * If `true`, the menu is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Which side of the view the menu should be placed.\n         */\n        this.side = 'start';\n        /**\n         * If `true`, swiping the menu is enabled.\n         */\n        this.swipeGesture = true;\n        /**\n         * The edge threshold for dragging the menu open.\n         * If a drag/swipe happens over this value, the menu is not triggered.\n         */\n        this.maxEdgeStart = 50;\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        if (this.type === undefined) {\n            this.type = config.get('menuType', this.mode === 'ios' ? 'reveal' : 'overlay');\n        }\n        const el = this.el;\n        const parent = el.parentNode;\n        if (this.contentId === undefined) {\n            console.warn(`[DEPRECATED][ion-menu] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-menu>...</ion-menu>\n  <div main>...</div>\n\nAFTER:\n  <ion-menu contentId=\"my-content\"></ion-menu>\n  <div id=\"my-content\">...</div>\n`);\n        }\n        const content = this.contentId !== undefined\n            ? document.getElementById(this.contentId)\n            : parent && parent.querySelector && parent.querySelector('[main]');\n        if (!content || !content.tagName) {\n            // requires content element\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.gesture = (await import('./index-624eea58.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            canStart: ev => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    async componentDidLoad() {\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        this.updateState();\n    }\n    disconnectedCallback() {\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        this.isPaneVisible = ev.detail.isPane(this.el);\n        this.updateState();\n    }\n    onBackdropClick(ev) {\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = (ev.composedPath)\n                ? !ev.composedPath().includes(this.menuInnerEl)\n                : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return menuController._setOpen(this, shouldOpen, animated);\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        if (width === this.width && this.animation !== undefined) {\n            return;\n        }\n        this.width = width;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        this.animation = await menuController._createAnimation(this.type, this);\n        if (!config.getBoolean('animated', true)) {\n            this.animation.duration(0);\n        }\n        this.animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const ani = this.animation\n            .direction((isReversed) ? 'reverse' : 'normal')\n            .easing((isReversed) ? 'cubic-bezier(0.4, 0.0, 0.6, 1)' : 'cubic-bezier(0.0, 0.0, 0.2, 1)');\n        if (animated) {\n            await ani.playAsync();\n        }\n        else {\n            ani.playSync();\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        if (!this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n            // TODO error\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation\n            .direction((this._isOpen) ? 'reverse' : 'normal')\n            .progressStart(true);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.timeStamp;\n        // Account for rounding errors in JS\n        let newStepValue = (shouldComplete) ? 0.001 : -0.001;\n        /**\n         * TODO: stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         * Not sure if the negative step value is an error or not\n         */\n        const adjustedStepValue = (stepValue <= 0) ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(0.4, 0), new Point(0.6, 1), new Point(1, 1), clamp(0, adjustedStepValue, 1));\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n            .progressEnd(shouldComplete ? 1 : 0, newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        assert(this.isAnimating, '_before() should be called while animating');\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // add css class\n            if (this.contentEl) {\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n        }\n        else {\n            // remove css classes\n            this.el.classList.remove(SHOW_MENU);\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit();\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.setDisabled(!isActive || !this.swipeGesture);\n        }\n        // Close menu immediately\n        if (!isActive && this._isOpen) {\n            // close if this menu is open, and should not be enabled\n            this.forceClosing();\n        }\n        if (!this.disabled) {\n            menuController._setActiveMenu(this);\n        }\n        assert(!this.isAnimating, 'can not be animating');\n    }\n    forceClosing() {\n        assert(this._isOpen, 'menu cannot be closed');\n        this.isAnimating = true;\n        const ani = this.animation.direction('reverse');\n        ani.playSync();\n        this.afterAnimation(false);\n    }\n    render() {\n        const { isEndSide, type, disabled, mode, isPaneVisible } = this;\n        return (h(Host, { role: \"navigation\", class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                'menu-side-end': isEndSide,\n                'menu-side-start': !isEndSide,\n                'menu-pane-visible': isPaneVisible\n            } }, h(\"div\", { class: \"menu-inner\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n    static get style() { return \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color,#fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,0,0);transform:translate3d(-9999px,0,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host-context([dir=rtl]) .menu-inner,[dir=rtl] .menu-inner{left:unset;right:unset;left:auto;right:0;-webkit-transform:translate3d(calc(-1 * -9999px),0,0);transform:translate3d(calc(-1 * -9999px),0,0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto}ion-backdrop{display:none;opacity:.01;z-index:-1}\\@media (max-width:340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translateZ(0);transform:translateZ(0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none!important;transform:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}:host(.menu-pane-visible) ion-backdrop{display:hidden!important}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18);box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18)}\"; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n\n// Given a menu, return whether or not the menu toggle should be visible\r\nconst updateVisibility = async (menu) => {\r\n    const menuEl = await menuController.get(menu);\r\n    return !!(menuEl && await menuEl.isActive());\r\n};\n\nconst MenuButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the user cannot interact with the menu button.\n         */\n        this.disabled = false;\n        /**\n         * Automatically hides the menu button when the corresponding menu is not active\n         */\n        this.autoHide = true;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.onClick = async () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    componentDidLoad() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const { color, disabled } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', 'menu');\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type\n        };\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(color)), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'ion-activatable': true, 'ion-focusable': true }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\" }), h(\"slot\", null, h(\"ion-icon\", { icon: menuIcon, mode: mode, lazy: false })), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n    }\n    static get style() { return \":host{--background:transparent;--color-focused:var(--color);--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:.5;pointer-events:none}\\@media (any-hover:hover){:host(:hover) .button-native{background:var(--background-hover);color:var(--color-hover)}}:host(.ion-focused) .button-native{background:var(--background-focused);color:var(--color-focused)}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host-context(ion-toolbar:not(.ion-color)){color:var(--ion-toolbar-color,var(--color))}:host{--background-focused:rgba(66,66,66,0.24);--background-hover:rgba(66,66,66,0.08);--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}\\@media (any-hover:hover){:host(.ion-color:hover) .button-native{background:rgba(var(--ion-color-base-rgb),.08)}}:host(.ion-color.ion-focused) .button-native{background:rgba(var(--ion-color-base-rgb),.24);color:var(--ion-color-base)}\"; }\n};\n\nconst MenuController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Open the menu. If a menu is not provided then it will open the first\n     * menu found. If the specified menu is `start` or `end`, then it will open\n     * the enabled menu on that side. Otherwise, it will try to find the menu\n     * using the menu's `id` property. If a menu is not found then it will\n     * return `false`.\n     *\n     * @param menu The menuId or side of the menu to open.\n     */\n    open(menu) {\n        return menuController.open(menu);\n    }\n    /**\n     * Close the menu. If a menu is specified, it will close that menu.\n     * If no menu is specified, then it will close any menu that is open.\n     * If it does not find any open menus, it will return `false`.\n     *\n     * @param menu The menuId or side of the menu to close.\n     */\n    close(menu) {\n        return menuController.close(menu);\n    }\n    /**\n     * Toggle the menu open or closed. If the menu is already open, it will try to\n     * close the menu, otherwise it will try to open it. Returns `false` if\n     * a menu is not found.\n     *\n     * @param menu The menuId or side of the menu to toggle.\n     */\n    toggle(menu) {\n        return menuController.toggle(menu);\n    }\n    /**\n     * Enable or disable a menu. Disabling a menu will not allow gestures\n     * for that menu or any calls to open it. This is useful when there are\n     * multiple menus on the same side and only one of them should be allowed\n     * to open. Enabling a menu will automatically disable all other menus\n     * on that side.\n     *\n     * @param enable If `true`, the menu should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable.\n     */\n    enable(enable, menu) {\n        return menuController.enable(enable, menu);\n    }\n    /**\n     * Enable or disable the ability to swipe open the menu.\n     *\n     * @param enable If `true`, the menu swipe gesture should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable the swipe gesture on.\n     */\n    swipeGesture(enable, menu) {\n        return menuController.swipeGesture(enable, menu);\n    }\n    /**\n     * Get whether or not the menu is open. Returns `true` if the specified\n     * menu is open. If a menu is not specified, it will return `true` if\n     * any menu is currently open.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    isOpen(menu) {\n        return menuController.isOpen(menu);\n    }\n    /**\n     * Get whether or not the menu is enabled. Returns `true` if the\n     * specified menu is enabled. Returns `false` if a menu is disabled\n     * or not found.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    isEnabled(menu) {\n        return menuController.isEnabled(menu);\n    }\n    /**\n     * Get a menu instance. If a menu is not provided then it will return the first\n     * menu found. If the specified menu is `start` or `end`, then it will return the\n     * enabled menu on that side. Otherwise, it will try to find the menu using the menu's\n     * `id` property. If a menu is not found then it will return `null`.\n     *\n     * @param menu The menuId or side of the menu.\n     */\n    get(menu) {\n        return menuController.get(menu);\n    }\n    /**\n     * Get the instance of the opened menu. Returns `null` if a menu is not found.\n     */\n    getOpen() {\n        return menuController.getOpen();\n    }\n    /**\n     * Get all menu instances.\n     */\n    getMenus() {\n        return menuController.getMenus();\n    }\n    /**\n     * Get whether or not a menu is animating. Returns `true` if any\n     * menu is currently animating.\n     */\n    isAnimating() {\n        return menuController.isAnimating();\n    }\n    /**\n     * Registers a new animation that can be used with any `ion-menu` by\n     * passing the name of the animation in its `type` property.\n     *\n     * @param name The name of the animation to register.\n     * @param animation The animation function to register.\n     */\n    async registerAnimation(name, animation) {\n        return menuController.registerAnimation(name, animation);\n    }\n};\n\nconst MenuToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * Automatically hides the content when the corresponding menu is not active.\n         *\n         * By default, it's `true`. Change it to `false` in order to\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\n         */\n        this.autoHide = true;\n        this.onClick = () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    connectedCallback() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", null)));\n    }\n    static get style() { return \":host(.menu-toggle-hidden){display:none}\"; }\n};\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuController as ion_menu_controller, MenuToggle as ion_menu_toggle };\n"],"sourceRoot":"webpack:///"}