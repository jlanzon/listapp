{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-textarea-md.entry.js"],"names":["Textarea","hostRef","registerInstance","inputId","textareaIds","didBlurAfterEdit","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","ionInput","emit","onFocus","focusChange","ionFocus","onBlur","ionBlur","onKeyDown","checkClearOnEdit","ionChange","createEvent","ionStyle","debounceEvent","getValue","runAutoGrow","debounceChanged","el","dispatchEvent","CustomEvent","detail","document","readTask","style","height","scrollHeight","focus","Promise","resolve","placeholder","hasValue","mode","getIonMode","labelId","label","findItemLabel","id","h","Host","class","Object","assign","createColorClasses","color","ref","autoCapitalize","autoFocus","maxLength","maxlength","minLength","minlength","readOnly","spellCheck","cols","rows","wrap","getElement"],"mappings":"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","file":"73.js","sourcesContent":["import { r as registerInstance, d as createEvent, f as readTask, c as getIonMode, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-46f4a262.js';\nimport { c as createColorClasses } from './theme-18cbe2cc.js';\n\nconst Textarea = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-input-${textareaIds++}`;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'none';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n         */\n        this.clearOnEdit = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the textarea.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * If `true`, the element height will increase based on the value.\n         */\n        this.autoGrow = false;\n        /**\n         * The value of the textarea.\n         */\n        this.value = '';\n        this.onInput = (ev) => {\n            if (this.nativeInput) {\n                this.value = this.nativeInput.value;\n            }\n            this.emitStyle();\n            this.ionInput.emit(ev);\n        };\n        this.onFocus = () => {\n            this.hasFocus = true;\n            this.focusChange();\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.hasFocus = false;\n            this.focusChange();\n            this.ionBlur.emit();\n        };\n        this.onKeyDown = () => {\n            this.checkClearOnEdit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    }\n    debounceChanged() {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    valueChanged() {\n        const nativeInput = this.nativeInput;\n        const value = this.getValue();\n        if (nativeInput && nativeInput.value !== value) {\n            nativeInput.value = value;\n        }\n        this.runAutoGrow();\n        this.emitStyle();\n        this.ionChange.emit({ value });\n    }\n    connectedCallback() {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            this.el.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    }\n    disconnectedCallback() {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    }\n    componentDidLoad() {\n        this.runAutoGrow();\n    }\n    // TODO: performance hit, this cause layout thrashing\n    runAutoGrow() {\n        const nativeInput = this.nativeInput;\n        if (nativeInput && this.autoGrow) {\n            readTask(() => {\n                nativeInput.style.height = 'inherit';\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\n            });\n        }\n    }\n    /**\n     * Sets focus on the specified `ion-textarea`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n    /**\n     * Returns the native `<textarea>` element used under the hood.\n     */\n    getInputElement() {\n        return Promise.resolve(this.nativeInput);\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'textarea': true,\n            'input': true,\n            'interactive-disabled': this.disabled,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus\n        });\n    }\n    /**\n     * Check if we need to clear the text input if clearOnEdit is enabled\n     */\n    checkClearOnEdit() {\n        if (!this.clearOnEdit) {\n            return;\n        }\n        // Did the input value change after it was blurred and edited?\n        if (this.didBlurAfterEdit && this.hasValue()) {\n            // Clear the input\n            this.value = '';\n        }\n        // Reset the flag\n        this.didBlurAfterEdit = false;\n    }\n    focusChange() {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n        this.emitStyle();\n    }\n    hasValue() {\n        return this.getValue() !== '';\n    }\n    getValue() {\n        return this.value || '';\n    }\n    render() {\n        const mode = getIonMode(this);\n        const value = this.getValue();\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true }) }, h(\"textarea\", { class: \"native-textarea\", ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n    static get style() { return \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-md-h{background:initial;color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h, ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label), ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md, [dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md, [dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-floating.sc-ion-textarea-md-h, .item-label-floating .sc-ion-textarea-md-h, .item-label-stacked.sc-ion-textarea-md-h, .item-label-stacked .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\"; }\n};\nlet textareaIds = 0;\n\nexport { Textarea as ion_textarea };\n"],"sourceRoot":"webpack:///"}