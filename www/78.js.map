{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js"],"names":["CELL_TYPE_ITEM","CELL_TYPE_HEADER","CELL_TYPE_FOOTER","NODE_CHANGE_NONE","NODE_CHANGE_POSITION","NODE_CHANGE_CELL","MIN_READS","updateVDom","dom","heightIndex","cells","range","node","change","d","toMutate","end","offset","length","i","cell","find","n","top","push","pool","filter","type","index","visible","forEach","doRender","el","nodeRender","updateCellHeight","children","Array","from","tagName","childrenNu","child","newChild","createNode","classList","add","appendChild","style","transform","remove","reads","template","getTemplate","ownerDocument","importNode","content","querySelector","getViewport","scrollTop","vierportHeight","margin","Math","max","bottom","getRange","viewport","buffer","topPos","bottomPos","min","getShouldUpdate","dirtyIndex","currentRange","findCellIndex","findIndex","c","inplaceUpdate","dst","src","calcCells","items","itemHeight","headerHeight","footerHeight","headerFn","footerFn","approxHeaderHeight","approxFooterHeight","approxItemHeight","j","len","item","value","height","calcHeightIndex","buf","acum","resizeBuffer","Uint32Array","newBuf","set","subarray","positionForIndex","VirtualScroll","hostRef","registerInstance","viewportHeight","virtualDom","isEnabled","viewportOffset","currentScrollTop","indexDirty","lastItemLen","totalHeight","onScroll","updateVirtualScroll","contentEl","closest","console","error","getScrollElement","scrollEl","updateState","undefined","Promise","resolve","getHeightIndex","cellIndex","scheduleUpdate","checkRange","timerUpdate","clearTimeout","readTask","readVS","bind","writeTask","writeVS","topOffset","offsetTop","parentElement","offsetHeight","shouldUpdate","domRender","renderItem","forceUpdate","update","window","getComputedStyle","parseFloat","getPropertyValue","setCellHeight","componentOnReady","then","setTimeout","shouldEnable","enableScrollEvents","Infinity","shouldListen","rmEvent","addEventListener","removeEventListener","renderHeader","renderFooter","h","Host","VirtualProxy","map","renderVirtualNode","getElement","utils","vattrs","classes","class","Object","assign"],"mappings":"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","file":"78.js","sourcesContent":["import { r as registerInstance, f as readTask, w as writeTask, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\n\nconst CELL_TYPE_ITEM = 'item';\r\nconst CELL_TYPE_HEADER = 'header';\r\nconst CELL_TYPE_FOOTER = 'footer';\r\nconst NODE_CHANGE_NONE = 0;\r\nconst NODE_CHANGE_POSITION = 1;\r\nconst NODE_CHANGE_CELL = 2;\n\nconst MIN_READS = 2;\r\nconst updateVDom = (dom, heightIndex, cells, range) => {\r\n    // reset dom\r\n    for (const node of dom) {\r\n        node.change = NODE_CHANGE_NONE;\r\n        node.d = true;\r\n    }\r\n    // try to match into exisiting dom\r\n    const toMutate = [];\r\n    const end = range.offset + range.length;\r\n    for (let i = range.offset; i < end; i++) {\r\n        const cell = cells[i];\r\n        const node = dom.find(n => n.d && n.cell === cell);\r\n        if (node) {\r\n            const top = heightIndex[i];\r\n            if (top !== node.top) {\r\n                node.top = top;\r\n                node.change = NODE_CHANGE_POSITION;\r\n            }\r\n            node.d = false;\r\n        }\r\n        else {\r\n            toMutate.push(cell);\r\n        }\r\n    }\r\n    // needs to append\r\n    const pool = dom.filter(n => n.d);\r\n    for (const cell of toMutate) {\r\n        const node = pool.find(n => n.d && n.cell.type === cell.type);\r\n        const index = cell.i;\r\n        if (node) {\r\n            node.d = false;\r\n            node.change = NODE_CHANGE_CELL;\r\n            node.cell = cell;\r\n            node.top = heightIndex[index];\r\n        }\r\n        else {\r\n            dom.push({\r\n                d: false,\r\n                cell,\r\n                visible: true,\r\n                change: NODE_CHANGE_CELL,\r\n                top: heightIndex[index],\r\n            });\r\n        }\r\n    }\r\n    dom\r\n        .filter(n => n.d && n.top !== -9999)\r\n        .forEach(n => {\r\n        n.change = NODE_CHANGE_POSITION;\r\n        n.top = -9999;\r\n    });\r\n};\r\nconst doRender = (el, nodeRender, dom, updateCellHeight) => {\r\n    const children = Array.from(el.children).filter(n => n.tagName !== 'TEMPLATE');\r\n    const childrenNu = children.length;\r\n    let child;\r\n    for (let i = 0; i < dom.length; i++) {\r\n        const node = dom[i];\r\n        const cell = node.cell;\r\n        // the cell change, the content must be updated\r\n        if (node.change === NODE_CHANGE_CELL) {\r\n            if (i < childrenNu) {\r\n                child = children[i];\r\n                nodeRender(child, cell, i);\r\n            }\r\n            else {\r\n                const newChild = createNode(el, cell.type);\r\n                child = nodeRender(newChild, cell, i) || newChild;\r\n                child.classList.add('virtual-item');\r\n                el.appendChild(child);\r\n            }\r\n            child['$ionCell'] = cell;\r\n        }\r\n        else {\r\n            child = children[i];\r\n        }\r\n        // only update position when it changes\r\n        if (node.change !== NODE_CHANGE_NONE) {\r\n            child.style.transform = `translate3d(0,${node.top}px,0)`;\r\n        }\r\n        // update visibility\r\n        const visible = cell.visible;\r\n        if (node.visible !== visible) {\r\n            if (visible) {\r\n                child.classList.remove('virtual-loading');\r\n            }\r\n            else {\r\n                child.classList.add('virtual-loading');\r\n            }\r\n            node.visible = visible;\r\n        }\r\n        // dynamic height\r\n        if (cell.reads > 0) {\r\n            updateCellHeight(cell, child);\r\n            cell.reads--;\r\n        }\r\n    }\r\n};\r\nconst createNode = (el, type) => {\r\n    const template = getTemplate(el, type);\r\n    if (template && el.ownerDocument) {\r\n        return el.ownerDocument.importNode(template.content, true).children[0];\r\n    }\r\n    return null;\r\n};\r\nconst getTemplate = (el, type) => {\r\n    switch (type) {\r\n        case CELL_TYPE_ITEM: return el.querySelector('template:not([name])');\r\n        case CELL_TYPE_HEADER: return el.querySelector('template[name=header]');\r\n        case CELL_TYPE_FOOTER: return el.querySelector('template[name=footer]');\r\n    }\r\n};\r\nconst getViewport = (scrollTop, vierportHeight, margin) => {\r\n    return {\r\n        top: Math.max(scrollTop - margin, 0),\r\n        bottom: scrollTop + vierportHeight + margin\r\n    };\r\n};\r\nconst getRange = (heightIndex, viewport, buffer) => {\r\n    const topPos = viewport.top;\r\n    const bottomPos = viewport.bottom;\r\n    // find top index\r\n    let i = 0;\r\n    for (; i < heightIndex.length; i++) {\r\n        if (heightIndex[i] > topPos) {\r\n            break;\r\n        }\r\n    }\r\n    const offset = Math.max(i - buffer - 1, 0);\r\n    // find bottom index\r\n    for (; i < heightIndex.length; i++) {\r\n        if (heightIndex[i] >= bottomPos) {\r\n            break;\r\n        }\r\n    }\r\n    const end = Math.min(i + buffer, heightIndex.length);\r\n    const length = end - offset;\r\n    return { offset, length };\r\n};\r\nconst getShouldUpdate = (dirtyIndex, currentRange, range) => {\r\n    const end = range.offset + range.length;\r\n    return (dirtyIndex <= end ||\r\n        currentRange.offset !== range.offset ||\r\n        currentRange.length !== range.length);\r\n};\r\nconst findCellIndex = (cells, index) => {\r\n    const max = cells.length > 0 ? cells[cells.length - 1].index : 0;\r\n    if (index === 0) {\r\n        return 0;\r\n    }\r\n    else if (index === max + 1) {\r\n        return cells.length;\r\n    }\r\n    else {\r\n        return cells.findIndex(c => c.index === index);\r\n    }\r\n};\r\nconst inplaceUpdate = (dst, src, offset) => {\r\n    if (offset === 0 && src.length >= dst.length) {\r\n        return src;\r\n    }\r\n    for (let i = 0; i < src.length; i++) {\r\n        dst[i + offset] = src[i];\r\n    }\r\n    return dst;\r\n};\r\nconst calcCells = (items, itemHeight, headerHeight, footerHeight, headerFn, footerFn, approxHeaderHeight, approxFooterHeight, approxItemHeight, j, offset, len) => {\r\n    const cells = [];\r\n    const end = len + offset;\r\n    for (let i = offset; i < end; i++) {\r\n        const item = items[i];\r\n        if (headerFn) {\r\n            const value = headerFn(item, i, items);\r\n            if (value != null) {\r\n                cells.push({\r\n                    i: j++,\r\n                    type: CELL_TYPE_HEADER,\r\n                    value,\r\n                    index: i,\r\n                    height: headerHeight ? headerHeight(value, i) : approxHeaderHeight,\r\n                    reads: headerHeight ? 0 : MIN_READS,\r\n                    visible: !!headerHeight,\r\n                });\r\n            }\r\n        }\r\n        cells.push({\r\n            i: j++,\r\n            type: CELL_TYPE_ITEM,\r\n            value: item,\r\n            index: i,\r\n            height: itemHeight ? itemHeight(item, i) : approxItemHeight,\r\n            reads: itemHeight ? 0 : MIN_READS,\r\n            visible: !!itemHeight,\r\n        });\r\n        if (footerFn) {\r\n            const value = footerFn(item, i, items);\r\n            if (value != null) {\r\n                cells.push({\r\n                    i: j++,\r\n                    type: CELL_TYPE_FOOTER,\r\n                    value,\r\n                    index: i,\r\n                    height: footerHeight ? footerHeight(value, i) : approxFooterHeight,\r\n                    reads: footerHeight ? 0 : MIN_READS,\r\n                    visible: !!footerHeight,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return cells;\r\n};\r\nconst calcHeightIndex = (buf, cells, index) => {\r\n    let acum = buf[index];\r\n    for (let i = index; i < buf.length; i++) {\r\n        buf[i] = acum;\r\n        acum += cells[i].height;\r\n    }\r\n    return acum;\r\n};\r\nconst resizeBuffer = (buf, len) => {\r\n    if (!buf) {\r\n        return new Uint32Array(len);\r\n    }\r\n    if (buf.length === len) {\r\n        return buf;\r\n    }\r\n    else if (len > buf.length) {\r\n        const newBuf = new Uint32Array(len);\r\n        newBuf.set(buf);\r\n        return newBuf;\r\n    }\r\n    else {\r\n        return buf.subarray(0, len);\r\n    }\r\n};\r\nconst positionForIndex = (index, cells, heightIndex) => {\r\n    const cell = cells.find(c => c.type === CELL_TYPE_ITEM && c.index === index);\r\n    if (cell) {\r\n        return heightIndex[cell.i];\r\n    }\r\n    return -1;\r\n};\n\nconst VirtualScroll = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.range = { offset: 0, length: 0 };\n        this.viewportHeight = 0;\n        this.cells = [];\n        this.virtualDom = [];\n        this.isEnabled = false;\n        this.viewportOffset = 0;\n        this.currentScrollTop = 0;\n        this.indexDirty = 0;\n        this.lastItemLen = 0;\n        this.totalHeight = 0;\n        /**\n         * It is important to provide this\n         * if virtual item height will be significantly larger than the default\n         * The approximate height of each virtual item template's cell.\n         * This dimension is used to help determine how many cells should\n         * be created when initialized, and to help calculate the height of\n         * the scrollable area. This height value can only use `px` units.\n         * Note that the actual rendered size of each cell comes from the\n         * app's CSS, whereas this approximation is used to help calculate\n         * initial dimensions before the item has been rendered.\n         */\n        this.approxItemHeight = 45;\n        /**\n         * The approximate height of each header template's cell.\n         * This dimension is used to help determine how many cells should\n         * be created when initialized, and to help calculate the height of\n         * the scrollable area. This height value can only use `px` units.\n         * Note that the actual rendered size of each cell comes from the\n         * app's CSS, whereas this approximation is used to help calculate\n         * initial dimensions before the item has been rendered.\n         */\n        this.approxHeaderHeight = 30;\n        /**\n         * The approximate width of each footer template's cell.\n         * This dimension is used to help determine how many cells should\n         * be created when initialized, and to help calculate the height of\n         * the scrollable area. This height value can only use `px` units.\n         * Note that the actual rendered size of each cell comes from the\n         * app's CSS, whereas this approximation is used to help calculate\n         * initial dimensions before the item has been rendered.\n         */\n        this.approxFooterHeight = 30;\n        this.onScroll = () => {\n            this.updateVirtualScroll();\n        };\n    }\n    itemsChanged() {\n        this.calcCells();\n        this.updateVirtualScroll();\n    }\n    async connectedCallback() {\n        const contentEl = this.el.closest('ion-content');\n        if (!contentEl) {\n            console.error('<ion-virtual-scroll> must be used inside an <ion-content>');\n            return;\n        }\n        this.scrollEl = await contentEl.getScrollElement();\n        this.contentEl = contentEl;\n        this.calcCells();\n        this.updateState();\n    }\n    componentDidUpdate() {\n        this.updateState();\n    }\n    disconnectedCallback() {\n        this.scrollEl = undefined;\n    }\n    onResize() {\n        this.calcCells();\n        this.updateVirtualScroll();\n    }\n    /**\n     * Returns the position of the virtual item at the given index.\n     */\n    positionForItem(index) {\n        return Promise.resolve(positionForIndex(index, this.cells, this.getHeightIndex()));\n    }\n    /**\n     * This method marks a subset of items as dirty, so they can be re-rendered. Items should be marked as\n     * dirty any time the content or their style changes.\n     *\n     * The subset of items to be updated can are specifing by an offset and a length.\n     */\n    async checkRange(offset, len = -1) {\n        // TODO: kind of hacky how we do in-place updated of the cells\n        // array. this part needs a complete refactor\n        if (!this.items) {\n            return;\n        }\n        const length = (len === -1)\n            ? this.items.length - offset\n            : len;\n        const cellIndex = findCellIndex(this.cells, offset);\n        const cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, cellIndex, offset, length);\n        this.cells = inplaceUpdate(this.cells, cells, cellIndex);\n        this.lastItemLen = this.items.length;\n        this.indexDirty = Math.max(offset - 1, 0);\n        this.scheduleUpdate();\n    }\n    /**\n     * This method marks the tail the items array as dirty, so they can be re-rendered.\n     *\n     * It's equivalent to calling:\n     *\n     * ```js\n     * virtualScroll.checkRange(lastItemLen);\n     * ```\n     */\n    async checkEnd() {\n        if (this.items) {\n            this.checkRange(this.lastItemLen);\n        }\n    }\n    updateVirtualScroll() {\n        // do nothing if virtual-scroll is disabled\n        if (!this.isEnabled || !this.scrollEl) {\n            return;\n        }\n        // unschedule future updates\n        if (this.timerUpdate) {\n            clearTimeout(this.timerUpdate);\n            this.timerUpdate = undefined;\n        }\n        // schedule DOM operations into the stencil queue\n        readTask(this.readVS.bind(this));\n        writeTask(this.writeVS.bind(this));\n    }\n    readVS() {\n        const { contentEl, scrollEl, el } = this;\n        let topOffset = 0;\n        let node = el;\n        while (node && node !== contentEl) {\n            topOffset += node.offsetTop;\n            node = node.parentElement;\n        }\n        this.viewportOffset = topOffset;\n        if (scrollEl) {\n            this.viewportHeight = scrollEl.offsetHeight;\n            this.currentScrollTop = scrollEl.scrollTop;\n        }\n    }\n    writeVS() {\n        const dirtyIndex = this.indexDirty;\n        // get visible viewport\n        const scrollTop = this.currentScrollTop - this.viewportOffset;\n        const viewport = getViewport(scrollTop, this.viewportHeight, 100);\n        // compute lazily the height index\n        const heightIndex = this.getHeightIndex();\n        // get array bounds of visible cells base in the viewport\n        const range = getRange(heightIndex, viewport, 2);\n        // fast path, do nothing\n        const shouldUpdate = getShouldUpdate(dirtyIndex, this.range, range);\n        if (!shouldUpdate) {\n            return;\n        }\n        this.range = range;\n        // in place mutation of the virtual DOM\n        updateVDom(this.virtualDom, heightIndex, this.cells, range);\n        // Write DOM\n        // Different code paths taken depending of the render API used\n        if (this.nodeRender) {\n            doRender(this.el, this.nodeRender, this.virtualDom, this.updateCellHeight.bind(this));\n        }\n        else if (this.domRender) {\n            this.domRender(this.virtualDom);\n        }\n        else if (this.renderItem) {\n            this.el.forceUpdate();\n        }\n    }\n    updateCellHeight(cell, node) {\n        const update = () => {\n            if (node['$ionCell'] === cell) {\n                const style = window.getComputedStyle(node);\n                const height = node.offsetHeight + parseFloat(style.getPropertyValue('margin-bottom'));\n                this.setCellHeight(cell, height);\n            }\n        };\n        if (node && node.componentOnReady) {\n            node.componentOnReady().then(update);\n        }\n        else {\n            update();\n        }\n    }\n    setCellHeight(cell, height) {\n        const index = cell.i;\n        // the cell might changed since the height update was scheduled\n        if (cell !== this.cells[index]) {\n            return;\n        }\n        if (cell.height !== height || cell.visible !== true) {\n            cell.visible = true;\n            cell.height = height;\n            this.indexDirty = Math.min(this.indexDirty, index);\n            this.scheduleUpdate();\n        }\n    }\n    scheduleUpdate() {\n        clearTimeout(this.timerUpdate);\n        this.timerUpdate = setTimeout(() => this.updateVirtualScroll(), 100);\n    }\n    updateState() {\n        const shouldEnable = !!(this.scrollEl &&\n            this.cells);\n        if (shouldEnable !== this.isEnabled) {\n            this.enableScrollEvents(shouldEnable);\n            if (shouldEnable) {\n                this.updateVirtualScroll();\n            }\n        }\n    }\n    calcCells() {\n        if (!this.items) {\n            return;\n        }\n        this.lastItemLen = this.items.length;\n        this.cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, 0, 0, this.lastItemLen);\n        this.indexDirty = 0;\n    }\n    getHeightIndex() {\n        if (this.indexDirty !== Infinity) {\n            this.calcHeightIndex(this.indexDirty);\n        }\n        return this.heightIndex;\n    }\n    calcHeightIndex(index = 0) {\n        // TODO: optimize, we don't need to calculate all the cells\n        this.heightIndex = resizeBuffer(this.heightIndex, this.cells.length);\n        this.totalHeight = calcHeightIndex(this.heightIndex, this.cells, index);\n        this.indexDirty = Infinity;\n    }\n    enableScrollEvents(shouldListen) {\n        if (this.rmEvent) {\n            this.rmEvent();\n            this.rmEvent = undefined;\n        }\n        const scrollEl = this.scrollEl;\n        if (scrollEl) {\n            this.isEnabled = shouldListen;\n            scrollEl.addEventListener('scroll', this.onScroll);\n            this.rmEvent = () => {\n                scrollEl.removeEventListener('scroll', this.onScroll);\n            };\n        }\n    }\n    renderVirtualNode(node) {\n        const { type, value, index } = node.cell;\n        switch (type) {\n            case CELL_TYPE_ITEM: return this.renderItem(value, index);\n            case CELL_TYPE_HEADER: return this.renderHeader(value, index);\n            case CELL_TYPE_FOOTER: return this.renderFooter(value, index);\n        }\n    }\n    render() {\n        return (h(Host, { style: {\n                height: `${this.totalHeight}px`\n            } }, this.renderItem && (h(VirtualProxy, { dom: this.virtualDom }, this.virtualDom.map(node => this.renderVirtualNode(node))))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"itemHeight\": [\"itemsChanged\"],\n        \"headerHeight\": [\"itemsChanged\"],\n        \"footerHeight\": [\"itemsChanged\"],\n        \"items\": [\"itemsChanged\"]\n    }; }\n    static get style() { return \"ion-virtual-scroll{display:block;position:relative;width:100%;contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-virtual-scroll>.virtual-loading{opacity:0}ion-virtual-scroll>.virtual-item{position:absolute!important;top:0!important;right:0!important;left:0!important;-webkit-transition-duration:0ms;transition-duration:0ms;will-change:transform}\"; }\n};\nconst VirtualProxy = ({ dom }, children, utils) => {\n    return utils.map(children, (child, i) => {\n        const node = dom[i];\n        const vattrs = child.vattrs || {};\n        let classes = vattrs.class || '';\n        classes += 'virtual-item ';\n        if (!node.visible) {\n            classes += 'virtual-loading';\n        }\n        return Object.assign(Object.assign({}, child), { vattrs: Object.assign(Object.assign({}, vattrs), { class: classes, style: Object.assign(Object.assign({}, vattrs.style), { transform: `translate3d(0,${node.top}px,0)` }) }) });\n    });\n};\n\nexport { VirtualScroll as ion_virtual_scroll };\n"],"sourceRoot":"webpack:///"}