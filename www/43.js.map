{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-nav_5.entry.js"],"names":["VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","component","params","state","container","element","attachComponent","delegate","assert","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","currentParams","keysA","Object","keys","keysB","length","key","convertToView","page","convertToViews","pages","map","filter","v","Nav","hostRef","registerInstance","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","ionNavWillLoad","createEvent","ionNavWillChange","ionNavDidChange","gesture","setDisabled","swipeGesture","root","setRoot","rootParams","document","querySelector","el","closest","mode","getIonMode","config","getBoolean","emit","rootChanged","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","swipeGestureChanged","lifecycle","LIFECYCLE_WILL_UNLOAD","_destroy","destroy","componentProps","opts","done","queueTrns","insertStart","insertViews","insertIndex","insertComponents","removeStart","removeCount","indexOrViewCtrl","tiConfig","removeView","startIndex","setPages","direction","active","getActiveSync","Promise","resolve","changed","promise","r","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","popTo","assign","push","tagName","index","canGoBackSync","getPreviousSync","indexOf","ti","skipIfBusy","reject","nextTrns","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","router","navChanged","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","init","postViewInit","enteringRequiresTransition","leavingRequiresTransition","transition","success","failed","viewsLength","viewControllers","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViewAt","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","destroyView","progressCallback","progressAnimation","ani","sbAni","leavingEl","animationOpts","showGoBack","baseEl","animationBuilder","animation","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","setPageHidden","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","getTimeGivenProgression","Point","progressEnd","h","getElement","navLink","routerDirection","pop","NavLink","onClick","Host","NavPop","NavPush","NavSetRoot"],"mappings":"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","file":"43.js","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, e as getElement, H as Host } from './core-feeeff0d.js';\nimport { b as config } from './config-3c7f3790.js';\nimport { b as assert } from './helpers-46f4a262.js';\nimport { d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './constants-3c3e1099.js';\nimport { a as attachComponent } from './framework-delegate-c2e2e1f4.js';\nimport { l as lifecycle, t as transition, s as setPageHidden } from './index-4d91f03a.js';\nimport { g as getTimeGivenProgression, P as Point } from './cubic-bezier-2812fda3.js';\n\nconst VIEW_STATE_NEW = 1;\r\nconst VIEW_STATE_ATTACHED = 2;\r\nconst VIEW_STATE_DESTROYED = 3;\r\nclass ViewController {\r\n    constructor(component, params) {\r\n        this.component = component;\r\n        this.params = params;\r\n        this.state = VIEW_STATE_NEW;\r\n    }\r\n    async init(container) {\r\n        this.state = VIEW_STATE_ATTACHED;\r\n        if (!this.element) {\r\n            const component = this.component;\r\n            this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     */\r\n    _destroy() {\r\n        assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\r\n        const element = this.element;\r\n        if (element) {\r\n            if (this.delegate) {\r\n                this.delegate.removeViewFromDom(element.parentElement, element);\r\n            }\r\n            else {\r\n                element.remove();\r\n            }\r\n        }\r\n        this.nav = undefined;\r\n        this.state = VIEW_STATE_DESTROYED;\r\n    }\r\n}\r\nconst matches = (view, id, params) => {\r\n    if (!view) {\r\n        return false;\r\n    }\r\n    if (view.component !== id) {\r\n        return false;\r\n    }\r\n    const currentParams = view.params;\r\n    if (currentParams === params) {\r\n        return true;\r\n    }\r\n    if (!currentParams && !params) {\r\n        return true;\r\n    }\r\n    if (!currentParams || !params) {\r\n        return false;\r\n    }\r\n    const keysA = Object.keys(currentParams);\r\n    const keysB = Object.keys(params);\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n    // Test for A's keys different from B.\r\n    for (const key of keysA) {\r\n        if (currentParams[key] !== params[key]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\nconst convertToView = (page, params) => {\r\n    if (!page) {\r\n        return null;\r\n    }\r\n    if (page instanceof ViewController) {\r\n        return page;\r\n    }\r\n    return new ViewController(page, params);\r\n};\r\nconst convertToViews = (pages) => {\r\n    return pages.map(page => {\r\n        if (page instanceof ViewController) {\r\n            return page;\r\n        }\r\n        if ('page' in page) {\r\n            return convertToView(page.page, page.params);\r\n        }\r\n        return convertToView(page, undefined);\r\n    }).filter(v => v !== null);\r\n};\n\nconst Nav = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.transInstr = [];\n        this.animationEnabled = true;\n        this.useRouter = false;\n        this.isTransitioning = false;\n        this.destroyed = false;\n        this.views = [];\n        /**\n         * If `true`, the nav should animate the transition of components.\n         */\n        this.animated = true;\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n        this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    }\n    swipeGestureChanged() {\n        if (this.gesture) {\n            this.gesture.setDisabled(this.swipeGesture !== true);\n        }\n    }\n    rootChanged() {\n        if (this.root !== undefined) {\n            if (!this.useRouter) {\n                this.setRoot(this.root, this.rootParams);\n            }\n        }\n    }\n    componentWillLoad() {\n        this.useRouter =\n            !!document.querySelector('ion-router') &&\n                !this.el.closest('[no-router]');\n        if (this.swipeGesture === undefined) {\n            const mode = getIonMode(this);\n            this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n        }\n        this.ionNavWillLoad.emit();\n    }\n    async componentDidLoad() {\n        this.rootChanged();\n        this.gesture = (await import('./swipe-back-35ad8e37.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n        this.swipeGestureChanged();\n    }\n    componentDidUnload() {\n        for (const view of this.views) {\n            lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            view._destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        // release swipe back gesture and transition\n        this.transInstr.length = this.views.length = 0;\n        this.destroyed = true;\n    }\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    push(component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: -1,\n            insertViews: [{ page: component, params: componentProps }],\n            opts\n        }, done);\n    }\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insert(insertIndex, component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: [{ page: component, params: componentProps }],\n            opts\n        }, done);\n    }\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    insertPages(insertIndex, insertComponents, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: insertComponents,\n            opts\n        }, done);\n    }\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    pop(opts, done) {\n        return this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts\n        }, done);\n    }\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popTo(indexOrViewCtrl, opts, done) {\n        const tiConfig = {\n            removeStart: -1,\n            removeCount: -1,\n            opts\n        };\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n            tiConfig.removeView = indexOrViewCtrl;\n            tiConfig.removeStart = 1;\n        }\n        else if (typeof indexOrViewCtrl === 'number') {\n            tiConfig.removeStart = indexOrViewCtrl + 1;\n        }\n        return this.queueTrns(tiConfig, done);\n    }\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    popToRoot(opts, done) {\n        return this.queueTrns({\n            removeStart: 1,\n            removeCount: -1,\n            opts\n        }, done);\n    }\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    removeIndex(startIndex, removeCount = 1, opts, done) {\n        return this.queueTrns({\n            removeStart: startIndex,\n            removeCount,\n            opts\n        }, done);\n    }\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setRoot(component, componentProps, opts, done) {\n        return this.setPages([{ page: component, params: componentProps }], opts, done);\n    }\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    setPages(views, opts, done) {\n        if (opts == null) {\n            opts = {};\n        }\n        // if animation wasn't set to true then default it to NOT animate\n        if (opts.animated !== true) {\n            opts.animated = false;\n        }\n        return this.queueTrns({\n            insertStart: 0,\n            insertViews: views,\n            removeStart: 0,\n            removeCount: -1,\n            opts\n        }, done);\n    }\n    /** @internal */\n    setRouteId(id, params, direction) {\n        const active = this.getActiveSync();\n        if (matches(active, id, params)) {\n            return Promise.resolve({\n                changed: false,\n                element: active.element\n            });\n        }\n        let resolve;\n        const promise = new Promise(r => (resolve = r));\n        let finish;\n        const commonOpts = {\n            updateURL: false,\n            viewIsReady: enteringEl => {\n                let mark;\n                const p = new Promise(r => (mark = r));\n                resolve({\n                    changed: true,\n                    element: enteringEl,\n                    markVisible: async () => {\n                        mark();\n                        await finish;\n                    }\n                });\n                return p;\n            }\n        };\n        if (direction === 'root') {\n            finish = this.setRoot(id, params, commonOpts);\n        }\n        else {\n            const viewController = this.views.find(v => matches(v, id, params));\n            if (viewController) {\n                finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back' }));\n            }\n            else if (direction === 'forward') {\n                finish = this.push(id, params, commonOpts);\n            }\n            else if (direction === 'back') {\n                finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true }));\n            }\n        }\n        return promise;\n    }\n    /** @internal */\n    async getRouteId() {\n        const active = this.getActiveSync();\n        return active\n            ? {\n                id: active.element.tagName,\n                params: active.params,\n                element: active.element\n            }\n            : undefined;\n    }\n    /**\n     * Get the active view.\n     */\n    getActive() {\n        return Promise.resolve(this.getActiveSync());\n    }\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n    getByIndex(index) {\n        return Promise.resolve(this.views[index]);\n    }\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n    canGoBack(view) {\n        return Promise.resolve(this.canGoBackSync(view));\n    }\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n    getPrevious(view) {\n        return Promise.resolve(this.getPreviousSync(view));\n    }\n    getLength() {\n        return this.views.length;\n    }\n    getActiveSync() {\n        return this.views[this.views.length - 1];\n    }\n    canGoBackSync(view = this.getActiveSync()) {\n        return !!(view && this.getPreviousSync(view));\n    }\n    getPreviousSync(view = this.getActiveSync()) {\n        if (!view) {\n            return undefined;\n        }\n        const views = this.views;\n        const index = views.indexOf(view);\n        return index > 0 ? views[index - 1] : undefined;\n    }\n    // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n    // 1. _nextTrns(): consumes the next transition in the queue\n    // 2. _viewInit(): initializes enteringView if required\n    // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n    // 4. _postViewInit(): add/remove the views from the navigation stack\n    // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n    // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n    // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n    // 8. _transitionFinish(): called once the transition finishes\n    // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n    queueTrns(ti, done) {\n        if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n            return Promise.resolve(false);\n        }\n        const promise = new Promise((resolve, reject) => {\n            ti.resolve = resolve;\n            ti.reject = reject;\n        });\n        ti.done = done;\n        // Normalize empty\n        if (ti.insertViews && ti.insertViews.length === 0) {\n            ti.insertViews = undefined;\n        }\n        // Enqueue transition instruction\n        this.transInstr.push(ti);\n        // if there isn't a transition already happening\n        // then this will kick off this transition\n        this.nextTrns();\n        return promise;\n    }\n    success(result, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        if (ti.done) {\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n        }\n        ti.resolve(result.hasCompleted);\n        if (ti.opts.updateURL !== false && this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                const direction = result.direction === 'back' ? 'back' : 'forward';\n                router.navChanged(direction);\n            }\n        }\n    }\n    failed(rejectReason, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        this.transInstr.length = 0;\n        this.fireError(rejectReason, ti);\n    }\n    fireError(rejectReason, ti) {\n        if (ti.done) {\n            ti.done(false, false, rejectReason);\n        }\n        if (ti.reject && !this.destroyed) {\n            ti.reject(rejectReason);\n        }\n        else {\n            ti.resolve(false);\n        }\n    }\n    nextTrns() {\n        // this is the framework's bread 'n butta function\n        // only one transition is allowed at any given time\n        if (this.isTransitioning) {\n            return false;\n        }\n        // there is no transition happening right now\n        // get the next instruction\n        const ti = this.transInstr.shift();\n        if (!ti) {\n            return false;\n        }\n        this.runTransition(ti);\n        return true;\n    }\n    async runTransition(ti) {\n        try {\n            // set that this nav is actively transitioning\n            this.ionNavWillChange.emit();\n            this.isTransitioning = true;\n            this.prepareTI(ti);\n            const leavingView = this.getActiveSync();\n            const enteringView = this.getEnteringView(ti, leavingView);\n            if (!leavingView && !enteringView) {\n                throw new Error('no views in the stack to be removed');\n            }\n            if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n                await enteringView.init(this.el);\n            }\n            this.postViewInit(enteringView, leavingView, ti);\n            // Needs transition?\n            const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n                enteringView !== leavingView;\n            const result = requiresTransition\n                ? await this.transition(enteringView, leavingView, ti)\n                : {\n                    // transition is not required, so we are already done!\n                    // they're inserting/removing the views somewhere in the middle or\n                    // beginning, so visually nothing needs to animate/transition\n                    // resolve immediately because there's no animation that's happening\n                    hasCompleted: true,\n                    requiresTransition: false\n                };\n            this.success(result, ti);\n            this.ionNavDidChange.emit();\n        }\n        catch (rejectReason) {\n            this.failed(rejectReason, ti);\n        }\n        this.isTransitioning = false;\n        this.nextTrns();\n    }\n    prepareTI(ti) {\n        const viewsLength = this.views.length;\n        ti.opts = ti.opts || {};\n        if (ti.opts.delegate === undefined) {\n            ti.opts.delegate = this.delegate;\n        }\n        if (ti.removeView !== undefined) {\n            assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n            assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n            const index = this.views.indexOf(ti.removeView);\n            if (index < 0) {\n                throw new Error('removeView was not found');\n            }\n            ti.removeStart += index;\n        }\n        if (ti.removeStart !== undefined) {\n            if (ti.removeStart < 0) {\n                ti.removeStart = viewsLength - 1;\n            }\n            if (ti.removeCount < 0) {\n                ti.removeCount = viewsLength - ti.removeStart;\n            }\n            ti.leavingRequiresTransition =\n                ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n        }\n        if (ti.insertViews) {\n            // allow -1 to be passed in to auto push it on the end\n            // and clean up the index if it's larger then the size of the stack\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n                ti.insertStart = viewsLength;\n            }\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n        }\n        const insertViews = ti.insertViews;\n        if (!insertViews) {\n            return;\n        }\n        assert(insertViews.length > 0, 'length can not be zero');\n        const viewControllers = convertToViews(insertViews);\n        if (viewControllers.length === 0) {\n            throw new Error('invalid views to insert');\n        }\n        // Check all the inserted view are correct\n        for (const view of viewControllers) {\n            view.delegate = ti.opts.delegate;\n            const nav = view.nav;\n            if (nav && nav !== this) {\n                throw new Error('inserted view was already inserted');\n            }\n            if (view.state === VIEW_STATE_DESTROYED) {\n                throw new Error('inserted view was already destroyed');\n            }\n        }\n        ti.insertViews = viewControllers;\n    }\n    getEnteringView(ti, leavingView) {\n        const insertViews = ti.insertViews;\n        if (insertViews !== undefined) {\n            // grab the very last view of the views to be inserted\n            // and initialize it as the new entering view\n            return insertViews[insertViews.length - 1];\n        }\n        const removeStart = ti.removeStart;\n        if (removeStart !== undefined) {\n            const views = this.views;\n            const removeEnd = removeStart + ti.removeCount;\n            for (let i = views.length - 1; i >= 0; i--) {\n                const view = views[i];\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n                    return view;\n                }\n            }\n        }\n        return undefined;\n    }\n    postViewInit(enteringView, leavingView, ti) {\n        assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n        assert(ti.resolve, 'resolve must be valid');\n        assert(ti.reject, 'reject must be valid');\n        const opts = ti.opts;\n        const insertViews = ti.insertViews;\n        const removeStart = ti.removeStart;\n        const removeCount = ti.removeCount;\n        let destroyQueue;\n        // there are views to remove\n        if (removeStart !== undefined && removeCount !== undefined) {\n            assert(removeStart >= 0, 'removeStart can not be negative');\n            assert(removeCount >= 0, 'removeCount can not be negative');\n            destroyQueue = [];\n            for (let i = 0; i < removeCount; i++) {\n                const view = this.views[i + removeStart];\n                if (view && view !== enteringView && view !== leavingView) {\n                    destroyQueue.push(view);\n                }\n            }\n            // default the direction to \"back\"\n            opts.direction = opts.direction || 'back';\n        }\n        const finalBalance = this.views.length +\n            (insertViews !== undefined ? insertViews.length : 0) -\n            (removeCount !== undefined ? removeCount : 0);\n        assert(finalBalance >= 0, 'final balance can not be negative');\n        if (finalBalance === 0) {\n            console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n            throw new Error('navigation stack needs at least one root page');\n        }\n        // At this point the transition can not be rejected, any throw should be an error\n        // there are views to insert\n        if (insertViews) {\n            // add the views to the\n            let insertIndex = ti.insertStart;\n            for (const view of insertViews) {\n                this.insertViewAt(view, insertIndex);\n                insertIndex++;\n            }\n            if (ti.enteringRequiresTransition) {\n                // default to forward if not already set\n                opts.direction = opts.direction || 'forward';\n            }\n        }\n        // if the views to be removed are in the beginning or middle\n        // and there is not a view that needs to visually transition out\n        // then just destroy them and don't transition anything\n        // batch all of lifecycles together\n        // let's make sure, callbacks are zoned\n        if (destroyQueue && destroyQueue.length > 0) {\n            for (const view of destroyQueue) {\n                lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n                lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n                lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            }\n            // once all lifecycle events has been delivered, we can safely detroy the views\n            for (const view of destroyQueue) {\n                this.destroyView(view);\n            }\n        }\n    }\n    async transition(enteringView, leavingView, ti) {\n        // we should animate (duration > 0) if the pushed page is not the first one (startup)\n        // or if it is a portal (modal, actionsheet, etc.)\n        const opts = ti.opts;\n        const progressCallback = opts.progressAnimation\n            ? (ani) => this.sbAni = ani\n            : undefined;\n        const mode = getIonMode(this);\n        const enteringEl = enteringView.element;\n        const leavingEl = leavingView && leavingView.element;\n        const animationOpts = Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n            leavingEl }, opts);\n        const { hasCompleted } = await transition(animationOpts);\n        return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n    }\n    transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n        const cleanupView = hasCompleted ? enteringView : leavingView;\n        if (cleanupView) {\n            this.cleanup(cleanupView);\n        }\n        return {\n            hasCompleted,\n            requiresTransition: true,\n            enteringView,\n            leavingView,\n            direction: opts.direction\n        };\n    }\n    insertViewAt(view, index) {\n        const views = this.views;\n        const existingIndex = views.indexOf(view);\n        if (existingIndex > -1) {\n            // this view is already in the stack!!\n            // move it to its new location\n            assert(view.nav === this, 'view is not part of the nav');\n            views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n        }\n        else {\n            assert(!view.nav, 'nav is used');\n            // this is a new view to add to the stack\n            // create the new entering view\n            view.nav = this;\n            // insert the entering view into the correct index in the stack\n            views.splice(index, 0, view);\n        }\n    }\n    removeView(view) {\n        assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n        const views = this.views;\n        const index = views.indexOf(view);\n        assert(index > -1, 'view must be part of the stack');\n        if (index >= 0) {\n            views.splice(index, 1);\n        }\n    }\n    destroyView(view) {\n        view._destroy();\n        this.removeView(view);\n    }\n    /**\n     * DOM WRITE\n     */\n    cleanup(activeView) {\n        // ok, cleanup time!! Destroy all of the views that are\n        // INACTIVE and come after the active view\n        // only do this if the views exist, though\n        if (this.destroyed) {\n            return;\n        }\n        const views = this.views;\n        const activeViewIndex = views.indexOf(activeView);\n        for (let i = views.length - 1; i >= 0; i--) {\n            const view = views[i];\n            const element = view.element;\n            if (i > activeViewIndex) {\n                // this view comes after the active view\n                // let's unload it\n                lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n                this.destroyView(view);\n            }\n            else if (i < activeViewIndex) {\n                // this view comes before the active view\n                // and it is not a portal then ensure it is hidden\n                setPageHidden(element, true);\n            }\n        }\n    }\n    canStart() {\n        return (!!this.swipeGesture &&\n            !this.isTransitioning &&\n            this.transInstr.length === 0 &&\n            this.animationEnabled &&\n            this.canGoBackSync());\n    }\n    onStart() {\n        this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: {\n                direction: 'back',\n                progressAnimation: true\n            }\n        }, undefined);\n    }\n    onMove(stepValue) {\n        if (this.sbAni) {\n            this.sbAni.progressStep(stepValue);\n        }\n    }\n    onEnd(shouldComplete, stepValue, dur) {\n        if (this.sbAni) {\n            this.animationEnabled = false;\n            this.sbAni.onFinish(() => {\n                this.animationEnabled = true;\n            }, { oneTimeCallback: true });\n            // Account for rounding errors in JS\n            let newStepValue = (shouldComplete) ? -0.001 : 0.001;\n            /**\n             * Animation will be reversed here, so need to\n             * reverse the easing curve as well\n             *\n             * Additionally, we need to account for the time relative\n             * to the new easing curve, as `stepValue` is going to be given\n             * in terms of a linear curve.\n             */\n            if (!shouldComplete) {\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(1, 0), new Point(0.68, 0.28), new Point(1, 1), stepValue);\n            }\n            else {\n                newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(0.32, 0.72), new Point(0, 1), new Point(1, 1), stepValue);\n            }\n            this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n        }\n    }\n    render() {\n        return (h(\"slot\", null));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"swipeGesture\": [\"swipeGestureChanged\"],\n        \"root\": [\"rootChanged\"]\n    }; }\n    static get style() { return \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\"; }\n};\n\nconst navLink = (el, routerDirection, component, componentProps) => {\r\n    const nav = el.closest('ion-nav');\r\n    if (nav) {\r\n        if (routerDirection === 'forward') {\r\n            if (component !== undefined) {\r\n                return nav.push(component, componentProps, { skipIfBusy: true });\r\n            }\r\n        }\r\n        else if (routerDirection === 'root') {\r\n            if (component !== undefined) {\r\n                return nav.setRoot(component, componentProps, { skipIfBusy: true });\r\n            }\r\n        }\r\n        else if (routerDirection === 'back') {\r\n            return nav.pop({ skipIfBusy: true });\r\n        }\r\n    }\r\n    return Promise.resolve(false);\r\n};\n\nconst NavLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * The transition direction when navigating to another page.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = () => {\n            return navLink(this.el, this.routerDirection, this.component, this.componentProps);\n        };\n    }\n    render() {\n        return (h(Host, { onClick: this.onClick }));\n    }\n    get el() { return getElement(this); }\n};\n\nconst NavPop = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.pop = () => {\n            return navLink(this.el, 'back');\n        };\n    }\n    componentDidLoad() {\n        console.warn('[DEPRECATED][ion-nav-pop] <ion-nav-pop> is deprecated. Use `<ion-nav-link routerDirection=\"back\">` instead.');\n    }\n    render() {\n        return (h(Host, { onClick: this.pop }));\n    }\n    get el() { return getElement(this); }\n};\n\nconst NavPush = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.push = () => {\n            return navLink(this.el, 'forward', this.component, this.componentProps);\n        };\n    }\n    componentDidLoad() {\n        console.warn('[DEPRECATED][ion-nav-push] `<ion-nav-push component=\"MyComponent\">` is deprecated. Use `<ion-nav-link component=\"MyComponent\">` instead.');\n    }\n    render() {\n        return (h(Host, { onClick: this.push }));\n    }\n    get el() { return getElement(this); }\n};\n\nconst NavSetRoot = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.setRoot = () => {\n            return navLink(this.el, 'root', this.component, this.componentProps);\n        };\n    }\n    componentDidLoad() {\n        console.warn('[DEPRECATED][ion-nav-set-root] `<ion-nav-set-root component=\"MyComponent\">` is deprecated. Use `<ion-nav-link component=\"MyComponent\" routerDirection=\"root\">` instead.');\n    }\n    render() {\n        return (h(Host, { onClick: this.setRoot }));\n    }\n    get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link, NavPop as ion_nav_pop, NavPush as ion_nav_push, NavSetRoot as ion_nav_set_root };\n"],"sourceRoot":"webpack:///"}