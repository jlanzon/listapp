{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-input-ios.entry.js"],"names":["Input","hostRef","registerInstance","inputId","inputIds","didBlurAfterEdit","hasFocus","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","debounce","disabled","name","readonly","required","spellcheck","type","value","onInput","ev","input","target","ionInput","emit","onBlur","focusChanged","emitStyle","ionBlur","onFocus","ionFocus","onKeydown","shouldClearOnEdit","hasValue","clearTextInput","preventDefault","stopPropagation","nativeInput","createEvent","ionChange","ionInputDidLoad","ionInputDidUnload","ionStyle","debounceEvent","debounceChanged","el","dispatchEvent","CustomEvent","detail","document","focus","Promise","resolve","clearOnEdit","undefined","placeholder","getValue","length","mode","getIonMode","labelId","label","findItemLabel","id","h","Host","class","Object","assign","createColorClasses","color","ref","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","inputMode","inputmode","min","max","minLength","minlength","maxLength","maxlength","multiple","pattern","readOnly","spellCheck","step","size","onKeyDown","tabindex","onTouchStart","onMouseDown","getElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,IAAMA,KAAK;AACP,iBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjBC,+DAAgB,CAAC,IAAD,EAAOD,OAAP,CAAhB;AACA,SAAKE,OAAL,uBAA4BC,QAAQ,EAApC;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;;AACQ,SAAKC,cAAL,GAAsB,KAAtB;AACA;AACR;AACA;;AACQ,SAAKC,YAAL,GAAoB,KAApB;AACA;AACR;AACA;;AACQ,SAAKC,WAAL,GAAmB,KAAnB;AACA;AACR;AACA;;AACQ,SAAKC,SAAL,GAAiB,KAAjB;AACA;AACR;AACA;;AACQ,SAAKC,UAAL,GAAkB,KAAlB;AACA;AACR;AACA;;AACQ,SAAKC,QAAL,GAAgB,CAAhB;AACA;AACR;AACA;;AACQ,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;;AACQ,SAAKC,IAAL,GAAY,KAAKX,OAAjB;AACA;AACR;AACA;;AACQ,SAAKY,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;;AACQ,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACR;AACA;;AACQ,SAAKC,UAAL,GAAkB,KAAlB;AACA;AACR;AACA;;AACQ,SAAKC,IAAL,GAAY,MAAZ;AACA;AACR;AACA;;AACQ,SAAKC,KAAL,GAAa,EAAb;;AACA,SAAKC,OAAL,GAAe,UAACC,EAAD,EAAQ;AACnB,UAAMC,KAAK,GAAGD,EAAE,CAACE,MAAjB;;AACA,UAAID,KAAJ,EAAW;AACP,aAAI,CAACH,KAAL,GAAaG,KAAK,CAACH,KAAN,IAAe,EAA5B;AACH;;AACD,WAAI,CAACK,QAAL,CAAcC,IAAd,CAAmBJ,EAAnB;AACH,KAND;;AAOA,SAAKK,MAAL,GAAc,YAAM;AAChB,WAAI,CAACpB,QAAL,GAAgB,KAAhB;;AACA,WAAI,CAACqB,YAAL;;AACA,WAAI,CAACC,SAAL;;AACA,WAAI,CAACC,OAAL,CAAaJ,IAAb;AACH,KALD;;AAMA,SAAKK,OAAL,GAAe,YAAM;AACjB,WAAI,CAACxB,QAAL,GAAgB,IAAhB;;AACA,WAAI,CAACqB,YAAL;;AACA,WAAI,CAACC,SAAL;;AACA,WAAI,CAACG,QAAL,CAAcN,IAAd;AACH,KALD;;AAMA,SAAKO,SAAL,GAAiB,YAAM;AACnB,UAAI,KAAI,CAACC,iBAAL,EAAJ,EAA8B;AAC1B;AACA,YAAI,KAAI,CAAC5B,gBAAL,IAAyB,KAAI,CAAC6B,QAAL,EAA7B,EAA8C;AAC1C;AACA,eAAI,CAACC,cAAL;AACH,SALyB,CAM1B;;;AACA,aAAI,CAAC9B,gBAAL,GAAwB,KAAxB;AACH;AACJ,KAVD;;AAWA,SAAK8B,cAAL,GAAsB,UAACd,EAAD,EAAQ;AAC1B,UAAI,KAAI,CAACV,UAAL,IAAmB,CAAC,KAAI,CAACI,QAAzB,IAAqC,CAAC,KAAI,CAACF,QAA3C,IAAuDQ,EAA3D,EAA+D;AAC3DA,UAAE,CAACe,cAAH;AACAf,UAAE,CAACgB,eAAH;AACH;;AACD,WAAI,CAAClB,KAAL,GAAa,EAAb;AACA;AACZ;AACA;AACA;AACA;;AACY,UAAI,KAAI,CAACmB,WAAT,EAAsB;AAClB,aAAI,CAACA,WAAL,CAAiBnB,KAAjB,GAAyB,EAAzB;AACH;AACJ,KAdD;;AAeA,SAAKK,QAAL,GAAgBe,2DAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;AACA,SAAKC,SAAL,GAAiBD,2DAAW,CAAC,IAAD,EAAO,WAAP,EAAoB,CAApB,CAA5B;AACA,SAAKV,OAAL,GAAeU,2DAAW,CAAC,IAAD,EAAO,SAAP,EAAkB,CAAlB,CAA1B;AACA,SAAKR,QAAL,GAAgBQ,2DAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;AACA,SAAKE,eAAL,GAAuBF,2DAAW,CAAC,IAAD,EAAO,iBAAP,EAA0B,CAA1B,CAAlC;AACA,SAAKG,iBAAL,GAAyBH,2DAAW,CAAC,IAAD,EAAO,mBAAP,EAA4B,CAA5B,CAApC;AACA,SAAKI,QAAL,GAAgBJ,2DAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;AACH;;AA9GM;AAAA;AAAA,sCA+GW;AACd,WAAKC,SAAL,GAAiBI,8DAAa,CAAC,KAAKJ,SAAN,EAAiB,KAAK5B,QAAtB,CAA9B;AACH;AAjHM;AAAA;AAAA,sCAkHW;AACd,WAAKgB,SAAL;AACH;AACD;AACJ;AACA;;AAvHW;AAAA;AAAA,mCAwHQ;AACX,WAAKA,SAAL;AACA,WAAKY,SAAL,CAAef,IAAf,CAAoB;AAAEN,aAAK,EAAE,KAAKA;AAAd,OAApB;AACH;AA3HM;AAAA;AAAA,wCA4Ha;AAChB,WAAKS,SAAL;AACA,WAAKiB,eAAL;AACA;AACI,aAAKC,EAAL,CAAQC,aAAR,CAAsB,IAAIC,WAAJ,CAAgB,iBAAhB,EAAmC;AACrDC,gBAAM,EAAE,KAAKH;AADwC,SAAnC,CAAtB;AAGH;AACJ;AApIM;AAAA;AAAA,2CAqIgB;AACnB;AACII,gBAAQ,CAACH,aAAT,CAAuB,IAAIC,WAAJ,CAAgB,mBAAhB,EAAqC;AACxDC,gBAAM,EAAE,KAAKH;AAD2C,SAArC,CAAvB;AAGH;AACJ;AACD;AACJ;AACA;AACA;;AA/IW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiJH,oBAAI,KAAKR,WAAT,EAAsB;AAClB,uBAAKA,WAAL,CAAiBa,KAAjB;AACH;;AAnJE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqJP;AACJ;AACA;;AAvJW;AAAA;AAAA,sCAwJW;AACd,aAAOC,OAAO,CAACC,OAAR,CAAgB,KAAKf,WAArB,CAAP;AACH;AA1JM;AAAA;AAAA,wCA2Ja;AAAA,UACRpB,IADQ,GACc,IADd,CACRA,IADQ;AAAA,UACFoC,WADE,GACc,IADd,CACFA,WADE;AAEhB,aAAQA,WAAW,KAAKC,SAAjB,GACDrC,IAAI,KAAK,UADR,GAEDoC,WAFN;AAGH;AAhKM;AAAA;AAAA,+BAiKI;AACP,aAAO,KAAKnC,KAAL,IAAc,EAArB;AACH;AAnKM;AAAA;AAAA,gCAoKK;AACR,WAAKwB,QAAL,CAAclB,IAAd,CAAmB;AACf,uBAAe,IADA;AAEf,iBAAS,IAFM;AAGf,2BAAmB,KAAK+B,WAAL,IAAoB,IAHxB;AAIf,qBAAa,KAAKtB,QAAL,EAJE;AAKf,qBAAa,KAAK5B,QALH;AAMf,gCAAwB,KAAKO;AANd,OAAnB;AAQH;AA7KM;AAAA;AAAA,mCA8KQ;AACX;AACA,UAAI,CAAC,KAAKP,QAAN,IAAkB,KAAK2B,iBAAL,EAAlB,IAA8C,KAAKC,QAAL,EAAlD,EAAmE;AAC/D,aAAK7B,gBAAL,GAAwB,IAAxB;AACH;AACJ;AAnLM;AAAA;AAAA,+BAoLI;AACP,aAAO,KAAKoD,QAAL,GAAgBC,MAAhB,GAAyB,CAAhC;AACH;AAtLM;AAAA;AAAA,6BAuLE;AAAA;AAAA;;AACL,UAAMC,IAAI,GAAGC,2DAAU,CAAC,IAAD,CAAvB;AACA,UAAMzC,KAAK,GAAG,KAAKsC,QAAL,EAAd;AACA,UAAMI,OAAO,GAAG,KAAK1D,OAAL,GAAe,MAA/B;AACA,UAAM2D,KAAK,GAAGC,8DAAa,CAAC,KAAKjB,EAAN,CAA3B;;AACA,UAAIgB,KAAJ,EAAW;AACPA,aAAK,CAACE,EAAN,GAAWH,OAAX;AACH;;AACD,aAAQI,2DAAC,CAACC,mDAAD,EAAO;AAAE,yBAAiB,KAAKrD,QAAL,GAAgB,MAAhB,GAAyB,IAA5C;AAAkDsD,aAAK,EAAEC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,4DAAkB,CAAC,KAAKC,KAAN,CAApC,CAAd,oLAAoEZ,IAApE,EAA2E,IAA3E,+JAAiF,WAAjF,EAA8F,KAAKzB,QAAL,EAA9F,+JAA+G,WAA/G,EAA4H,KAAK5B,QAAjI;AAAzD,OAAP,EAAgN2D,2DAAC,CAAC,OAAD,EAAU;AAAEE,aAAK,EAAE,cAAT;AAAyBK,WAAG,EAAE,aAAAlD,KAAK;AAAA,iBAAI,MAAI,CAACgB,WAAL,GAAmBhB,KAAvB;AAAA,SAAnC;AAAiE,2BAAmBuC,OAApF;AAA6FhD,gBAAQ,EAAE,KAAKA,QAA5G;AAAsH4D,cAAM,EAAE,KAAKA,MAAnI;AAA2IC,sBAAc,EAAE,KAAKnE,cAAhK;AAAgLoE,oBAAY,EAAE,KAAKnE,YAAnM;AAAiNoE,mBAAW,EAAE,KAAKnE,WAAnO;AAAgPoE,iBAAS,EAAE,KAAKnE,SAAhQ;AAA2QoE,iBAAS,EAAE,KAAKC,SAA3R;AAAsSC,WAAG,EAAE,KAAKA,GAAhT;AAAqTC,WAAG,EAAE,KAAKA,GAA/T;AAAoUC,iBAAS,EAAE,KAAKC,SAApV;AAA+VC,iBAAS,EAAE,KAAKC,SAA/W;AAA0XC,gBAAQ,EAAE,KAAKA,QAAzY;AAAmZxE,YAAI,EAAE,KAAKA,IAA9Z;AAAoayE,eAAO,EAAE,KAAKA,OAAlb;AAA2b/B,mBAAW,EAAE,KAAKA,WAAL,IAAoB,EAA5d;AAAgegC,gBAAQ,EAAE,KAAKzE,QAA/e;AAAyfC,gBAAQ,EAAE,KAAKA,QAAxgB;AAAkhByE,kBAAU,EAAE,KAAKxE,UAAniB;AAA+iByE,YAAI,EAAE,KAAKA,IAA1jB;AAAgkBC,YAAI,EAAE,KAAKA,IAA3kB;AAAilBzE,YAAI,EAAE,KAAKA,IAA5lB;AAAkmBC,aAAK,EAAEA,KAAzmB;AAAgnBC,eAAO,EAAE,KAAKA,OAA9nB;AAAuoBM,cAAM,EAAE,KAAKA,MAAppB;AAA4pBI,eAAO,EAAE,KAAKA,OAA1qB;AAAmrB8D,iBAAS,EAAE,KAAK5D;AAAnsB,OAAV,CAAjN,EAA66B,KAAKrB,UAAL,IAAmB,CAAC,KAAKI,QAAzB,IAAqC,CAAC,KAAKF,QAA5C,IAAyDoD,2DAAC,CAAC,QAAD,EAAW;AAAE/C,YAAI,EAAE,QAAR;AAAkBiD,aAAK,EAAE,kBAAzB;AAA6C0B,gBAAQ,EAAE,IAAvD;AAA6DC,oBAAY,EAAE,KAAK3D,cAAhF;AAAgG4D,mBAAW,EAAE,KAAK5D;AAAlH,OAAX,CAAt+B,CAAT;AACH;AAhMM;AAAA;AAAA,wBAiME;AAAE,aAAO6D,2DAAU,CAAC,IAAD,CAAjB;AAA0B;AAjM9B;AAAA;AAAA,wBAkMe;AAAE,aAAO;AAC3B,oBAAY,CAAC,iBAAD,CADe;AAE3B,oBAAY,CAAC,iBAAD,CAFe;AAG3B,iBAAS,CAAC,cAAD;AAHkB,OAAP;AAIpB;AAtMG;AAAA;AAAA,wBAuMY;AAAE,aAAO,ytJAAP;AAAmuJ;AAvMjvJ;;AAAA;AAAA,GAAX;;AAyMA,IAAI5F,QAAQ,GAAG,CAAf","file":"31.js","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-46f4a262.js';\nimport { c as createColorClasses } from './theme-18cbe2cc.js';\n\nconst Input = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-input-${inputIds++}`;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'off';\n        /**\n         * Indicates whether the value of the control can be automatically completed by the browser.\n         */\n        this.autocomplete = 'off';\n        /**\n         * Whether auto correction should be enabled when the user is entering/editing the text value.\n         */\n        this.autocorrect = 'off';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n         */\n        this.clearInput = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the input.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * The type of control to display. The default type is text.\n         */\n        this.type = 'text';\n        /**\n         * The value of the input.\n         */\n        this.value = '';\n        this.onInput = (ev) => {\n            const input = ev.target;\n            if (input) {\n                this.value = input.value || '';\n            }\n            this.ionInput.emit(ev);\n        };\n        this.onBlur = () => {\n            this.hasFocus = false;\n            this.focusChanged();\n            this.emitStyle();\n            this.ionBlur.emit();\n        };\n        this.onFocus = () => {\n            this.hasFocus = true;\n            this.focusChanged();\n            this.emitStyle();\n            this.ionFocus.emit();\n        };\n        this.onKeydown = () => {\n            if (this.shouldClearOnEdit()) {\n                // Did the input value change after it was blurred and edited?\n                if (this.didBlurAfterEdit && this.hasValue()) {\n                    // Clear the input\n                    this.clearTextInput();\n                }\n                // Reset the flag\n                this.didBlurAfterEdit = false;\n            }\n        };\n        this.clearTextInput = (ev) => {\n            if (this.clearInput && !this.readonly && !this.disabled && ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n            this.value = '';\n            /**\n             * This is needed for clearOnEdit\n             * Otherwise the value will not be cleared\n             * if user is inside the input\n             */\n            if (this.nativeInput) {\n                this.nativeInput.value = '';\n            }\n        };\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionInputDidLoad = createEvent(this, \"ionInputDidLoad\", 7);\n        this.ionInputDidUnload = createEvent(this, \"ionInputDidUnload\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    debounceChanged() {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    valueChanged() {\n        this.emitStyle();\n        this.ionChange.emit({ value: this.value });\n    }\n    connectedCallback() {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            this.el.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    }\n    disconnectedCallback() {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    }\n    /**\n     * Sets focus on the specified `ion-input`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n    /**\n     * Returns the native `<input>` element used under the hood.\n     */\n    getInputElement() {\n        return Promise.resolve(this.nativeInput);\n    }\n    shouldClearOnEdit() {\n        const { type, clearOnEdit } = this;\n        return (clearOnEdit === undefined)\n            ? type === 'password'\n            : clearOnEdit;\n    }\n    getValue() {\n        return this.value || '';\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'input': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    focusChanged() {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (!this.hasFocus && this.shouldClearOnEdit() && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n    }\n    hasValue() {\n        return this.getValue().length > 0;\n    }\n    render() {\n        const mode = getIonMode(this);\n        const value = this.getValue();\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'has-value': this.hasValue(), 'has-focus': this.hasFocus }) }, h(\"input\", { class: \"native-input\", ref: input => this.nativeInput = input, \"aria-labelledby\": labelId, disabled: this.disabled, accept: this.accept, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, step: this.step, size: this.size, type: this.type, value: value, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown }), (this.clearInput && !this.readonly && !this.disabled) && h(\"button\", { type: \"button\", class: \"input-clear-icon\", tabindex: \"-1\", onTouchStart: this.clearTextInput, onMouseDown: this.clearTextInput })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n    static get style() { return \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0!important;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label), ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios, [dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios, [dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:50%;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.has-focus.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios, .has-focus.sc-ion-input-ios-h button.sc-ion-input-ios, .has-focus.sc-ion-input-ios-h input.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-floating.sc-ion-input-ios-h, .item-label-floating .sc-ion-input-ios-h, .item-label-stacked.sc-ion-input-ios-h, .item-label-stacked .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20viewBox=\\'0%200%20512%20512\\'><path%20fill=\\'var(--ion-color-step-600,%20%23666666)\\'%20d=\\'M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z\\'/></svg>\\\");width:30px;height:30px;background-size:18px}\"; }\n};\nlet inputIds = 0;\n\nexport { Input as ion_input };\n"],"sourceRoot":"webpack:///"}